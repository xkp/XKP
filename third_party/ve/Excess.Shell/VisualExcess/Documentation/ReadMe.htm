<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--TO READ THIS HELP FILE, RIGHT-CLICK ON THE FILE NAME IN THE
    SOLUTION EXPLORER PANE AND SELECT "VIEW IN BROWSER"
-->

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252"/>
<title>Microsoft Visual Studio Shell Isolated Starter Kit</title>
<style type="text/css">
<!--
BODY            { font-family: Verdana; font-size: 67% }
.maindiv        { background: url('Images/SideBar.png') repeat-y; padding-left: 55px; padding-top: 5px; position: relative; height: 50px }
P               { margin-top: 0; margin-bottom: 6px; line-height:130% }
H1              { margin-top: 20px; margin-bottom: 12px; font-size:190% }
H2              { color: #585F56; left: -55px; position: relative; margin-top: 21px; margin-bottom: 9px; font-size:170% }
H3              { margin-top: 21px; margin-bottom: 9px; font-size: 140%;  font-weight: bold}
H4              { margin-top: 18px; margin-bottom: 9px; font-size: 140%; font-weight: bold}
OL              { margin-top: 0; margin-bottom: 9px; line-height:130%}
UL              { margin-top: 0; margin-bottom: 9px; line-height:130%}
LI              { margin-top: 0; margin-bottom: 6px }
BLOCKQUOTE      { margin-left: 20px }
PRE             { font-family: "Courier New"; font-size:11.0pt; BACKGROUND: #FFFFCC;  padding-top: 6px; padding-bottom: 6px;}
TABLE           { padding: 4px; BACKGROUND: #f8f7ef; BORDER: #DDDCD6 1px solid; BORDER-COLLAPSE: collapse; margin-bottom: 9px; }
TR              { vertical-align: top} 
TD              { padding: 4px; font-family: Verdana; font-size: 67%; line-height: 130%} 
.contents       { line-height: 150%; color: #003300}
DIV.CodeBlock   { font-family: "Courier New"; font-size: 100%; margin-bottom: 6px; BACKGROUND: #f8f7ef; BORDER: #eeede6 1px solid; padding: 10px; }
.CodeInline     { font-family: "Courier New" }
.ProcedureLabel { margin-top: 12px; font-style: italic; font-weight: bold; color: #0D4CC3 } 
.FileNameCol    { padding: 6px; BACKGROUND: #eeede6; width:220px; font-weight: bold}
.keyword        { font-size:11.0pt; font-family: "Courier New"; color:Blue}
.type           { font-size:11.0pt; font-family: "Courier New"; color:Teal}
.string         { font-size:11.0pt; font-family: "Courier New"; color:Maroon}
-->
</style>
</head>

<body style="margin-top:0; margin-left:0; margin-right:20px; margin-bottom:0">
<div style="background-color:#788abe"><img alt="Microsoft (R) Visual Studio (C) 2008 SDK" src="Images/Title.png" /></div>
<div class="maindiv">

<a name="top">

<!-- MAIN CONTENT BEGINS -->

</a>

<h1><a name="top">Starter Kit: Visual Studio Shell Isolated</a></h1>
<p><b><a name="top">Contents:</a></b></p>

<p class="contents">
<a href="#Introduction">Introduction</a>
<br/><a href="#Goals">The Visual Studio Shell Isolated Solution</a>
<br/><a href="#Getting_Started">Getting Started</a>
<br/><a href="#Extending_VSShell">Extending your Visual Studio Shell Isolated application</a>
<br/><a href="#Shipping_VSShell">Preparing Your Visual Studio Shell Isolated application to ship</a>
<br/><a href="#ForMoreInformation">For More Information</a>
<br/>

</p>

<h2>
<a href="#top"><img alt="Navigat to the top of the document" src="Images/TopJump.png" border="0"/></a>
<a name="Introduction">Introduction</a>
</h2>


<img src="Images/AppEnv.jpg" alt="Visual Studio Shell Isolated" align="right" style="margin-left: 15px; margin-bottom: 10px; border:0"/>
<p>This Visual Studio SDK Starter Kit will help you create your own application based upon Visual Studio Technology. The project comes ready to compile and run, and it's easy to customize with only a little extra programming. The section <i>Extending your Visual Studio Shell Isolated application</i> 
contains a list of some customizations you might make. 
</p>
<p><b>Note:</b> This documentation assumes that you have advanced knowledge of 
programming concepts, the Visual Studio environment, and the Visual Studio SDK. You can learn more about 
these topics in the product documentation by clicking <b>Help</b> on the File 
Menu, or by positioning the mouse cursor on language keywords or user interface 
elements such as windows or dialog boxes, and pressing <b>F1</b>.
</p>

<h2>
<a href="#top"><img alt="Navigat to the top of the document" src="Images/TopJump.png" border="0"/></a>
<a name="Goals">The Visual Studio Shell Isolated Solution</a>
</h2>

<p>This starter kit 
	creates the following three projects to help you get started:</p>
<ul>
<li>The main application program contained within the project IronPythonStudio that will call the appropriate code to begin running your own instance of Visual Studio 
    Shell Isolated.</li>
<li>A Satellite DLL project - IronPythonStudioUI. All Visual Studio 2008 Shell Isolated Mode applications needs a menu 
    bar. This 
    project contains a Visual Studio Command Table (VSCT) file which defines which 
    menu items are visible to the user. By commenting and uncommenting lines of text 
    in this file, you will add and remove items from the menus. For example, suppose 
    you do not want the View|Full Screen command to be available for your 
    application. Inside the <b>IronPythonStudioUI.vsct</b> file, find the line
<b>&lt;Define name="No_ShellPkg_FullScreen"/&gt;</b> and uncomment it. Doing so will cause the 
    command to no longer appear after rebuilding. </li>
</ul>



<h2>
<a href="#top"><img alt="Navigat to the top of the document" src="Images/TopJump.png" border="0"/></a>
<a name="Getting_Started">Getting Started</a>
</h2>


<p><b>Building and Running Visual Studio Shell Isolated</b></p>

<p>
Once the Visual Studio Shell Isolated project is loaded into the Visual Studio environment, you can 
compile and run the program in one step. Press <b>F5</b> to build and start Visual Studio Shell Isolated under the debugger. 
	After building, the project will register your Visual Studio Shell Isolated program for use with your 
	computer, and then launch your customized version of Visual Studio.
	</p>

<p><b>.PkgDef Files</b></p>
<p>These files are similar to .reg files, with the addition of replacement variables.&nbsp; 
.PkgDef files files are read, parsed, and their contents are then merged into the registry. When your application runs the registry
entries created by the .PkgDef file are read used to configure how users view and interact with your application. 
Most of changes that you might want to make to your application are made in 
the file IronPythonStudio.pkgdef file.&nbsp; For example, open the file IronPythonStudio.pkgdef within the IronPythonStudio
project. Near the top of this file is an entry which looks like <code>&quot;AppName&quot;=&quot;IronPythonStudio&quot;</code>. If you were to
change this to <code>&quot;AppName&quot;=&quot;My New Application Name&quot;</code> 
and then build and run your application, the 
title bar of the application would read <code>My New Application Name</code>.</p>


<p><b>The &quot;Command Used&quot; VSCT file</b></p>
<p>Developers familiar with developing VSPackages are accustomed to creating commands. Visual Studio technologies contains a large set of predefined commands - such as File|Open|File or View|Task List -
that are available to the user of a application. However, some of these commands may not be appropriate for your application. For example, suppose
you do not want to enable opening files, therefore the File|Open|File command would not be appropriate for you to display in your application. You can 
hide or show these commands and the UI associated with them through the Command Used VSCT file.&nbsp;
</p>
<p>Open the 
<code>Resource Files\IronPythonStudioUI.vsct</code> file in the IronPythonStudioUI 
project and simply add or remove <code>UsedCommands</code> or <code>UsedCommand</code> definitions to 
modify which commands are shown to your users.
</p>

<h2>
<a href="#top">
<img alt="Navigat to the top of the document" src="Images/TopJump.png" border="0"/></a><a name="Extending_VSShell">Extending 
	your Visual Studio Core Isolated application</a>
</h2>

<h3>Changing the Splash Screen and Icon Graphics</h3>

<p>The graphics that are displayed for the splash screen and for the icon of your 
	application are stored in your application&#39;s local directory and referenced from the 
	registry. It’s easy to modify the images to display.</p>

<p class="ProcedureLabel">To change the splash screen image:</p>
<ol>
<li>Expand the project <b>IronPythonStudio</b> from within the Solution Explorer tool 
	window.</li>
<li>Expand the <b>Resources</b> node of this project.</li>
<li>Double-click the file <b>Splash.bmp</b>. Modify the image in any way that you 
	wish, and then save the file. When you run your application application, the splash 
	screen displayed will be your newly modified bitmap. Note that there will be an 
	overlay drawn on the bottom left corner of the bitmap. This overlay cannot be 
	removed, and will always be drawn on the splash screen.</li>
</ol>

<p class="ProcedureLabel">To change the icons associated with your application:</p>
<ol>
<li>Expand the project <b>IronPythonStudio</b> from within the Solution Explorer tool 
	window.</li>
<li>Expand the <b>Resources</b> node of this project.</li>
<li>Double-click the <b>IronPythonStudio.ico</b> file, opening it within the icon editor.</li>
</ol>

<h3>More Suggestions</h3>
<p>A Visual Studio Shell Isolated application solution is designed to be extended and customized. 
Here are some ideas for extending it:
</p>
<ul>
<li>
<b><i>Visual Studio Shell Isolated does not include a Start Page.</i></b><br/>
If you want your application to closely resemble Visual Studio, create a Tool Window in the package project which 
		renders data the way you want.</li>
<li><b><i>Create an &quot;Express&quot; version of your programming language:</i></b><br/>
The Express editions of Microsoft languages have proven to be very popular. Try 
	creating your own Express edition for a programming language you have created.</li>
<li><b><i>Convert a package for Visual Studio Shell Isolated</i></b>
<br/>Do you have an existing VSPackage designed for Visual Studio, but want to enable it
to run inside of a Visual Studio Shell Isolated application? Simply create a .PkgDef file for the package and
drop the file in the appropriate directory for a application. You can quickly do this with the regpkg tool by
passing the /pkgreg switch to the command line.</li>
</ul>

<h2>
<a href="#top">
<img alt="Navigat to the top of the document" src="Images/TopJump.png" border="0"/></a><a name="Shipping_VSShell">Preparing 
	your Visual Studio Core Isolated application to ship</a>
</h2>

<p>Once you have built your binary files, you need to package them to ship to your users. There are a few steps involved to prepare your code for release:</p> 

<h3>Package Load Keys &amp; Application Load Keys</h3>

<p/>While testing your application, Visual Studio Shell will load and run the 
stub EXE and any VSPackages you generate because verification is disabled when you 
	have the Visual Studio SDK installed. However, your customers will most likely 
	noPackage Load Keys &amp; Shell Load Keys<p/>While testing your application, Visual Studio Shell will load and run the stub 
    EXE and any VSPackages you generate because verification is disabled when you 
    have the Visual Studio SDK installed. However, your customers will most likely 
    not have this SDK installed, and requiring it to run your application is an 
    inconvenience to them. To enable loading your Visual Studio Shell stub EXE and 
    VSPackages, you will need a Shell Load Key (SLK) for your stub EXE and VSPackage 
    Load Keys (PLKs) for your VSPackages. To acquire these keys, visit the <a href="http://msdn.microsoft.com/vsx/">Visual Studio Extensibility Center</a>
    where you can input your information to create both PLKs and SLKs. The files IronPythonStudio.pkgdef and IronPythonStudio.rc both contain comments
    showing how to use your SLK.

<h3>Installing your files</h3>

<p>After building your application, requesting your Package and Shell Load Keys, you 
    will need where you can input your information to 
        create both PLKs and SLKs. The files IronPythonStudio.pkgdef and IronPythonStudio.rc 
        both contain comments describing how to use your SLK.</p>

<h3>Installing your files</h3>

<p>After building your application, requesting your Package and Shell Load Keys, you 
    will need to prepare an installer program for your application. Installing your 
    application will require three parts. The first step is to install an Microsoft 
    Installer file (MSI) file that will install the Visual Studio Shell 2008 
    Isolated Mode program code on the end user's computer disk. More information 
    about how to download this file is available at the 
  <a href="http://www.vsipmembers.com/">VSIP Members web site</a>. The next MSI to 
    install will place the program code and any associated files that you have 
    created on disk. This will include the two projects generated when you run the 
    wizard, as well as any additional packages that you have developed.&nbsp; With 
    these two MSI files, you will now need to develop a program to install both of 
    these MSI files. This program can be a simple batch file to individually call 
    each MSI file, installing them onto the user's computer, or an elaborate, 
    UI-intensive program that gives users progress feedback and allows them to 
    cancel installation. The choice of how this is done is yours, and depends on the 
    requirements of your program.</p>

<h2><a href="#top"><img alt="Navigat to the top of the document" src="Images/TopJump.png" border="0"/></a><a name="ForMoreInformation">For 
    More Information</a>
</h2>

<h3>Online Resources</h3>

<ul>
<li>
<a href="http://lab.msdn.microsoft.com/ProductFeedback/">Provide feedback on 
this documentation</a>
</li>
<li>
<a href="http://msdn.microsoft.com/vsx/">Visual Studio Extensibility Center</a>
</li>
<li>
<a href="http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=57&SiteID=1">Visual Studio Extensibility Forums</a>
</li>
</ul>


<p>
<a href="http://www.microsoft.com/info/copyright.mspx">© Microsoft Corporation 
and/or its suppliers. All rights reserved. Terms of Use. </a>
</p>

</div>

</body>

</html>
