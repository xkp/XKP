<xss:code>
	compiler.log("Rendering test with enum class...");
	
	//ERROR: assertion failed: si.get, file /src/xs/linker.cpp, line 1576
	//compiler.log(compiler.full_path("enums.xss"));
	//compiler.copy_file(src = compiler.full_path("enums.xss"), dst = "../production/enums.xss");
	
	string srcf = compiler.full_path("enums.xss");
	
	compiler.copy_file(src = srcf, dst = "../production/enums.xss");
	
	enum_idiom.instances += application;
	for(var i in enum_idiom.instances)
	{
		
		string itype = "";
		if(i.type)
			itype = i.type.output_id;
		
		out()
		{
			Instance: name = "<xss:e value="i.output_id"/>", type = "<xss:e value="itype"/>"
		}
		
		var qprops = i.query_properties("*");
		for(var p in qprops)
		{
			if(p.value == null && p.default_value != null)
			{
				p.value = p.default_value;
				
				if(p.type.is_enum)
				{
					//p.value = compiler.render_expression(p.default_value, p);
					p.value = compiler.compile_expression(p.value);
				}
			}
			
			string etype = "(enum)";
			if(!p.type.is_enum)
			{
				etype = "";
			}
			else
			{
				var pp = compiler.evaluate_property(p);
				
				if(pp has "output_xml")
				{
					compiler.log("output_xml: " + pp.output_xml + " && output_id: " + pp.output_id);
				}
			}
			
			out()
			{
				<xss:e>p.output_id</xss:e><xss:e>etype</xss:e> = <xss:e>p.render_value()</xss:e>
			}
			
			if(p.set_fn == null && p.get_fn == null && 
			   p.get_xss == null && p.set_xss == null && 
			   p.property_xss == null && p.property_xss_set == null)
			{
				p.output_id = "prop_" + i.output_id + "_" + p.name;
				
				//compiler.log("instance: '" + i.output_id + "' property id: '" + p.id + "' + output_id: '" + p.output_id + "'");
			}
		}
		
		
		//compiler.xss("../idioms/java/instance.xss", i);
		
		
		for(var e in i.events)
		{
			if(e.implemented)
			{
				out()
				{
					void <xss:e value="e.output_id"/>() <xss:open_brace/>
				}
				
				for(var impl in e.impls)
				{
					out()
					{
						<xss:e>impl.render()</xss:e>
					}
				}
				
				out()
				{
					<xss:close_brace/>
				}
			}
		}
		
	}
</xss:code>
