
===[ 3js-ms.project.xml ]================

Log: Rendering 3js Types...
Log: Rendering Sequence Types...
Log: x
Log: x
Log: alpha
Log: alpha
Log: Rendering Sequence...
Success are greateful
===[ 3js-ui.project.xml ]================

Log: Rendering Resources...
Log: Rendering 3js Types...
Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ 3js1.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js2.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js3.project.xml ]================

Error [project] Cannot find type
type = meshable
ERROR: Project:  3js3.project.xml

===[ 3js4.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js5.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js_cameras.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js_carousel.project.xml ]================

Log: Rendering Resources...
Log: Rendering 3js Types...
Success are greateful
===[ 3js_cube.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js_cube_img.project.xml ]================

Log: Rendering Resources...
Log: Rendering 3js Types...
Success are greateful
===[ 3js_model.project.xml ]================

Log: Rendering Resources...
Log: Rendering 3js Types...
Success are greateful
===[ 3js_particle.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js_particle_system.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ 3js_sound.project.xml ]================

Log: Rendering Resources...
Log: Rendering 3js Types...
Success are greateful
===[ 3js_transform.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ box2d1.project.xml ]================

Log: my_body
Log: floor
Success are greateful
===[ box2d2.project.xml ]================

Log: Rendering Resources...
Log: Rendering UI Types...
Log: BOX2D: Not Yet Rendering Types...
Log: Rendering UI...
Log: 
Log: floor
Success are greateful
===[ cameras.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ carousel_1.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ cube.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ enums.project.xml ]================

Log: Rendering test with enum class...
Log: output_xml: top && output_id: PL_TOP
Log: output_xml: visible && output_id: VISIBLE

			Instance: name = "btn", type = "Button"
		
				property:text = "Enums"			
				property:layout_width = 200			
				property:layout_height = 43			
				property:enabled = false			
				property:placement(enum) = XKPLayout.PL_TOP			
				sameName = "My owner is button 'btn'"			
				property:layout_x = 0			
				property:layout_y = 0			
				property:visible(enum) = View.VISIBLE			
				property:states = 			
					void onClick() {
				
						int pl = XKPLayout.PL_LEFT;
((XKPLayout.LayoutParams) btn.getLayoutParams()).setPlacement(((XKPLayout.LayoutParams) btn.getLayoutParams()).getPlacement() + 1);
if (prop_btn_visible == VISIBLE_get())
{
	btn.setVisibility(View.INVISIBLE);
}
else
{
	if (prop_btn_visible == INVISIBLE_get())
	{
		btn.prop_btn_visible_set(View.GONE);
	}
	else
	{
		btn.prop_btn_visible_set(VISIBLE_get());
	}
}
btn.setEnabled(!prop_btn_enabled);
btn.layout(btn.getLeft(), btn.getTop(), btn.getLeft() + prop_btn_height * 2, btn.getBottom());
String swp = sameName;
sameName = prop_btn_sameName;
prop_btn_sameName = swp;
					
					}
				
			Instance: name = "application", type = ""
		
				sameName = "My owner is application."			
Success are greateful
===[ java1.project.xml ]================

Log: -- Rendering instance: instance1
Log: Properties size: 2
Log: Rendering property: xvalue
Log: Rendering property: svalue
Log: Methods size: 5
Log: Rendering method: test0
Log: Rendering method: test1
Log: Rendering method: test2
Log: Rendering method: test3
Log: Rendering method: foo
Log: Events size: 0
Log: -- Rendering instance: application
Log: Properties size: 3
Log: Rendering property: lvalue
Log: Rendering property: yvalue
Log: Rendering property: xvalue
Log: Methods size: 1
Log: Rendering method: app_test
Log: Events size: 1
Log: Rendering event: create

Success are greateful
===[ java2.project.xml ]================

Log: -- Rendering instance: instance1
Log: Properties size: 0
Log: Methods size: 1
Log: Rendering method: test0
Log: Events size: 0
Log: -- Rendering instance: application
Log: Properties size: 0
Log: Methods size: 0
Log: Events size: 0

Success are greateful
===[ java3.project.xml ]================

Log: Rendering method: check_type
Log: Rendering method: foobar
Log: Rendering event: click
Log: Rendering property: foo
Log: Rendering property: typing
Log: Rendering property: simple
Log: Rendering property: read_only
Log: Rendering property: writable
Log: Rendering property: mixed
Log: Rendering property: bar




		public Integer check_type() {
			Integer a;
a = 1;
Object b;
typing = a;
return a;
		}
	




		public String foobar(Integer v) {
			t1.foo = t2.foo + 10;
t2.set_bar(foo + bar + "++");
set_complex(t1, t2.get_bar() + bar + this.foo + "--");
set_some_int(t1, t1.get_some_int() - 1);
some_int_set(t2.some_int_get() + 1);
some_int_set(t1.some_int_get() + 20);
set_more(t1).complex(get_more(t1).complex() + 1);
more_complex_set(more_complex_get() - 1);
ArrayList arr = new ArrayList(Arrays.asList( new Object [] {} ));
arr.add(10);
writable_set(read_only + simple + mixed);
mixed_set(writable);
return t1.get_bar();
		}
	





			private void onClick() {
		
				ArrayList<Object> list = new ArrayList(Arrays.asList( new Object [] {1, 2, "item", 3.140000, "vowel"} ));
for(Object i : list)
{
	System.out.println(i);
}
			
			}
		










			private Integer prop__typing;
		





			private Integer prop__simple = 50;
		





			public Double prop__read_only_get() {
				return 10.000000;
			}
		





			private Object prop__writable;
			
			public void prop__writable_set(Object value) {
				prop__writable = value;
				console.log(value);
			}
		





			public Integer prop__mixed_get() {
				return 10;
			}
			
			public void prop__mixed_set(Object value) {
				console.log("Something");
			}
		






Success are greateful
===[ jquery1.project.xml ]================

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>TITLE</title>
<script type="text/javascript" src="jquery.js"></script>

<script type="text/javascript">
$(function() {
	


















                btn1.text("One button")
            






                btn1.width(100)
            













                btn2.text("Two button")
            






                btn2.width(100)
            













                btn3.text("Reset")
            






                btn3.width(100)
            

});
</script>

<style>
</style>
</head>

<body>
    
            <div id='application'>
        
            <button id='btn1'>
        
                </button>
            
            <button id='btn2'>
        
                </button>
            
            <button id='btn3'>
        
                </button>
            
                </div>
            </body>
</html>

Success are greateful
===[ jquery2.project.xml ]================

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>TITLE</title>
<script type="text/javascript" src="jquery.js"></script>

<script type="text/javascript">
$(function() {
	











        application.target = null;

        application.target_set = function (value)
        {
            application.target = value;
            btn2.text("target acquired " + value);
for(var i = 0; i < 20; i++)
{
btn2.width(btn2.width() + 10);
if (btn2.width() > 200)
{
btn2.width(100);
}
}

        };
    





	application.reset = function(s) 
	{
		this.target_set(s);
btn1.text("...");
btn2.text("...");
	};













                btn1.text("One button")
            






                btn1.width(100)
            





	btn1.click = function()
	{    

		btn2.text("Clicked");
btn1.text("Other Clicked");
	
	};














                btn2.text("Two button")
            






                btn2.width(100)
            





	btn2.click = function()
	{    

		btn1.text("Old value: " + application.target);
application.target_set(300);
	
	};














                btn3.text("Reset")
            






                btn3.width(100)
            





	btn3.click = function()
	{    

		application.reset();
	
	};


});
</script>

<style>
</style>
</head>

<body>
    
            <div id='application'>
        
            <button id='btn1'>
        
                </button>
            
            <button id='btn2'>
        
                </button>
            
            <button id='btn3'>
        
                </button>
            
                </div>
            </body>
</html>

Success are greateful
===[ jquery3.project.xml ]================

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>TITLE</title>
<script type="text/javascript" src="jquery.js"></script>

<script type="text/javascript">
$(function() {
	











        application.target = null;

        application.target_set = function (value)
        {
            application.target = value;
            btn2.text("target acquired " + value);
for(var i = 0; i < 20; i++)
{
btn2.width(btn2.width() + 10);
if (btn2.width() > 200)
{
btn2.width(100);
}
}

        };
    





	application.reset = function(s) 
	{
		this.target_set(s);
btn1.text("...");
btn2.text("...");
	};













                btn1.text("One button")
            






                btn1.width(100)
            





	btn1.click = function()
	{    

		btn2.text("Clicked");
btn1.text("Other Clicked");
	
	};














                btn2.text("Two button")
            






                btn2.width(100)
            





	btn2.click = function()
	{    

		btn1.text("Old value: " + application.target);
application.target_set(300);
	
	};














                btn3.text("Reset")
            






                btn3.width(100)
            





	btn3.click = function()
	{    

		application.reset();
	
	};


});
</script>

<style>
</style>
</head>

<body>
    
            <div id='application'>
        
            <button id='btn1'>
        
                </button>
            
            <button id='btn2'>
        
                </button>
            
            <button id='btn3'>
        
                </button>
            
                </div>
            </body>
</html>

Success are greateful
===[ jquery4.project.xml ]================

Success are greateful
===[ jquery5.project.xml ]================

Log: Rendering jQuery...
Success are greateful
===[ json1.project.xml ]================

ERROR: Project:  json1.project.xml

===[ model_1.project.xml ]================

Error [cannot-resolve] Instance not found
instance = female_model
ERROR: Project:  model_1.project.xml

===[ ms1.project.xml ]================

Log: Rendering Sequence Types...
Log: Rendering Sequence...
Log: target
Log: target
Log: target
Success are greateful
===[ ms2.project.xml ]================

Log: Rendering Sequence Types...
Log: alpha
Log: alpha
Log: Rendering Sequence...
Success are greateful
===[ ms3.project.xml ]================

Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ ms4.project.xml ]================

Log: Rendering UI Types...
Log: Rendering Sequence Types...
Log: alpha
Log: alpha
Log: Rendering UI...
Log: Rendering Sequence...
Success are greateful
===[ ms5.project.xml ]================

Log: Rendering UI Types...
Log: Rendering Sequence Types...
Log: Rendering UI...
Log: Rendering Sequence...
Success are greateful
===[ ms6.project.xml ]================

Error [cannot-resolve] Instance not found
instance = btn1
ERROR: Project:  ms6.project.xml

===[ query_properties.project.xml ]================

Log: Rendering test query_properties...
Log: assigning default_value = 0
Log: assigning default_value = 0
Log: assigning default_value = EVisibility.true

			Instance: name = "btn", type = "Button"
		
				property "caption" = "Enums"			
				property "width" = 200			
				property "height" = 43			
				property "enabled" = false			
				property "placement" = XKPLayout.PL_TOP			
				property "sameName" = "My owner is button 'btn'"			
				property "x" = 0			
				property "y" = 0			
				property "visible" = "EVisibility.true"			
				property "states" = 			
			Instance: name = "application", type = ""
		
				property "sameName" = "My owner is application."			
Success are greateful
===[ resources_demo.project.xml ]================

Log: Rendering Resources...
Log: Rendering 3js Types...
Success are greateful
===[ sound.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ transform.project.xml ]================

Log: Rendering 3js Types...
Success are greateful
===[ ui.project.xml ]================

Log: Rendering Resources...
Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ ui_audio.project.xml ]================

Log: Rendering Resources...
Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ ui_audio_1.project.xml ]================

Log: Rendering Resources...
Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ ui_class_test.project.xml ]================

Log: Rendering Resources...
Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ ui_demo.project.xml ]================

Log: Rendering Resources...
Log: Rendering UI Types...
Log: Rendering UI...
Success are greateful
===[ ui_video.project.xml ]================

Log: Rendering UI Types...
Log: Rendering Sequence Types...
Log: Rendering UI...
Log: Rendering Sequence...
Success are greateful
===[ wax1.project.xml ]================

Error at: C:/dev/XKP/xss/tests/../idioms/wax/wax.xml
Error [404] File not found
file = C:/dev/XKP/xss/tests/../idioms/wax/wax.xml
ERROR: Project:  wax1.project.xml

===[ xss1.project.xml ]================


hello, darling
this is Louis


		Darling
	
		Im glad to see you back where you belong
	

            Thats all folks
            It was a pleasure
        Success are greateful
===[ xss10.project.xml ]================

Log: De bug in
Log: Inside condition flag...
Log: instance: it1
Log: prop:getting
Log: get: getting_get()
Log: instance: it2
Log: prop:counter
Log: prop:getting
Log: get: getting_get()
Log: prop:setting
Log: get: setting
Log: set: setting_set({value})
Log: instance: application
Log: prop:counter
Log: Instance it1...
Log: Rendering property: getting
Log: Rendering event: create
Log: Instance it2...
Log: Rendering property: counter
Log: Rendering property: getting
Log: Rendering property: setting
Log: Rendering event: click
Log: Rendering method: returning
Log: Instance application...
Log: Rendering property: counter

			== Instance it1 ==
		




			public Integer prop_it1_getting_get() {
				return counter * 10;
			}
		





			private void event_it1_create() {
		
				counter = WHAT UP DOUGH;
			
			}
		

			== Instance it2 ==
		




			private Integer prop_it2_counter = 0;
		





			public Integer prop_it2_getting_get() {
				return counter / 10;
			}
		





			private Object prop_it2_setting;
			
			public void prop_it2_setting_set(Object value) {
				prop_it2_setting = value;
				prop_it2_counter = value + prop_it2_getting;
			}
		





			private void event_it2_click() {
		
				prop_it2_setting;
			
			}
		




		public Integer returning() {
			it1.mthd_1();
if (it1.size > it2.size)
{
	return counter;
}
else
{
	return 0;
}
		}
	

			== Instance application ==
		




			private Integer prop_application_counter = 0;
		

Success are greateful
===[ xss2.project.xml ]================


		instance id: t1
	
				something_
			
				something
			
		instance id: t2
	
				something2
			
				something_
			
				something
			
				something3
			
		instance id: t3
	
				event id: click
				event output_id: onClick
			
					Interface: IClick
				
		instance id: t4
	
				something3
			
		t_arrays 
	
			id: touch output_id: touch
		
		t_arrays1 
	
		t_arrays2 
	
		t_arrays3 
	
			id: touch output_id: touch
		
		t_base_import 
	
			id: create output_id: create
		
				Interface: ICreate
			
		t_derived_import 
	
			id: click output_id: onClick
		
				Interface: IClick
			
			id: up output_id: onMouseUp
		
				Interface: IMouseUp
			
			id: down output_id: create
		
			id: click output_id: onClick
		
				Interface: IKeyClick
			
			id: up output_id: onMouseUp
		
			id: down output_id: create
		
		t_keyb_import 
	
			id: click output_id: onClick
		
				Interface: IKeyClick
			
			id: up output_id: onMouseUp
		
			id: down output_id: create
		
		t_mouse_import 
	
			id: click output_id: onClick
		
				Interface: IClick
			
			id: up output_id: onMouseUp
		
				Interface: IMouseUp
			
			id: down output_id: create
		
		t_super_derived 
	
		t_super_merged 
	
		t_xss5 
	
		t_xss5_1 
	
		t_xss8 
	
			id: click output_id: onClick
		
				Interface: IClick
			
			id: up output_id: onMouseUp
		
				Interface: IMouseUp
			
			id: down output_id: create
		
		t_xss9_1 
	
		t_xss9_2 
	
Success are greateful
===[ xss3.project.xml ]================


Success are greateful
===[ xss4.project.xml ]================


				Even = 2
			
				Even = 4
			
				Even = 6
			


        Before? Hello
    
				Odd = 1
			
				Odd = 3
			
				Odd = 5
			

AFter! 
		object
	
Is this after "After!"? World






Success are greateful
===[ xss5.project.xml ]================

Log: application
Log: null super
Log: t1
Log: t_xss5
Log: application
Log: t_xss5
Log: a
Log: ab
Log: ba

Success are greateful
===[ xss6.project.xml ]================


			event id: click event output_id: onClick
		
				Interface: IClick
			
Success are greateful
===[ xss7.project.xml ]================

Log: btn
Log: null
Log: btn
Log: null
Log: application
Log: null
Log: application
Log: null

			instance id: application
			instance class: application
		
			instance id: btn
			instance class: button
		
				property id: caption - output_id: property:text
					namespace = android
			
					value = "ArrayType"				
				property id: width - output_id: property:layout_width
					namespace = android
			
					value = 200				
				property id: height - output_id: property:layout_height
					namespace = android
			
					value = 43				
				property id: enabled - output_id: property:enabled
					namespace = android
			
					value = false				
				property id: placement - output_id: property:placement
					namespace = xkp
			
					value = XKPLayout.PL_TOP				
				property id: states - output_id: property:states
					namespace = xkp
			
					** No render property "states" **
				
			==[Begin rendering Array]======
		
				id =  && type = string
				value = value0
			
				id =  && type = string
				value = value1
			
			==[Begin rendering Object]======
		
				id = attr0 && type = int
				value = 0
			
				id = attr1 && type = string
				value = v1
			
			==[End rendering Object]======
		
			==[End rendering Array]======
		
				property id: x - output_id: property:layout_x
					namespace = xkp
			
				property id: y - output_id: property:layout_y
					namespace = xkp
			
				property id: visible - output_id: property:visible
					namespace = android
			
Success are greateful
===[ xss8.project.xml ]================


            method id: check_type
			code: 
			var a;
a = 1;
return a;

		
            method id: foobar
			code: 
			this.foo = t2.foo + "++";
t2.set_bar(this.foo + this.get_bar() + "++");
set_complex(this, t2.get_bar() + this.get_bar() + this.foo + "--");
set_some_int(this, this.get_some_int() - 1);
set_some_int(t2, t2.get_some_int() + 1);
set_some_int(this, this.get_some_int() + 20);
var arr = [];
arr.push(10);
this.writable_set(this.read_only_get() + this.simple + this.mixed_get());
this.mixed_set(this.writable);
set_more(this).complex(get_more(this).complex() + 1);
set_more(t2).complex(get_more(t2).complex() - 1);

		
Success are greateful
===[ xss9.project.xml ]================

Log: Return type: t_xss9_2

		var a = new t_xss9_1(myManager, 10, null);
var b = new t_xss9_1(myManager, 20, 10);
var c = new t_xss9_2();
return c;

	
Success are greateful