<xss:parameter id="cmp"/>
<xss:parameter id="is_class" default_value="false"/>
<xss:code>
    string cmp_id = cmp.id;
    if (!is_class)
    {
        string parent_id = cmp.parent.id;
        if (cmp.parent.id == "application")
            parent_id = "g_ui_root";
                
        out()
	    {
		    <xss:e value = "cmp_id"/> = <xss:e value = "parent_id"/>.<xss:e value = "cmp.creation_function"/>(
	    }

	    if (cmp.parameters)
        {
            for(int i = 0; i < cmp.parameters.size; i++)
		    {
                var param = cmp.parameters[i];
                var prop = cmp.get_property(param.property_name);

                if(prop != null)
                    out() {<xss:e v="prop.render_value()"/>}			
                else
                    out() {null}			

                if (i < cmp.parameters.size - 1)
                {
                    out(dont_break = true) {,}
                }
		    }
        }

	    out() {);}
        compiler.xss("../common-js/instance.xss", cmp);
    }
    else 
        cmp_id = "this";

    //position the component
    if (cmp.width != null && cmp.height != null)
    {
        out(indent = 0)
        {
            <xss:e value="cmp_id"/>.rect(<xss:e value="cmp.x"/>, <xss:e value="cmp.y"/>, <xss:e value="cmp.width"/>, <xss:e value="cmp.height"/>);
        }
    }
    else if (cmp.x != null && cmp.y != null)
    {
        out(indent = 0)
        {
            <xss:e value="cmp_id"/>.position(<xss:e value="cmp.x"/>, <xss:e value="cmp.y"/>);
        }
    }

</xss:code>
