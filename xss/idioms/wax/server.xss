var http = require("http");
var url  = require("url");
<xss:code>
    compiler.inject("render_initialization");
</xss:code>

var application = {};

<xss:code>
//preprocess pages so a method gets added
//to the application per page

array<object> pages = application.find_by_type("page");
for(var page in pages)
{
    var events = page.get_event_code("render");
    if (events.size == 0)
        compiler.error("web pages expect a render event");

    if (events.size > 1)
        compiler.error("web pages expect a single render event");

    var code  = events[0];

    var methd = wax_compiler.compile_page(page, code);
    application.add_method(page.id, methd);
}

//render 'em
compiler.xss("../common-js/instance.xss", application);
</xss:code>

http.createServer(function(request, response) 
{
    var pathname = url.parse(request.url).pathname;

    <xss:code>
    for(var i in application.children)
    {
        compiler.out("if (pathname == '" + i.id + "')");
        compiler.out("{");

        if (i.class_name == "page" || i.class_name == "service")
        {
            compiler.out("application." + i.id + "(request, response);");
        }
        else compiler.error("Only pages and services are supported", found = i.class_name);

        compiler.out("}");
    }
    </xss:code>
}).listen(8888);