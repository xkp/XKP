

<xss:code>
//preconditions
if (!application.canvasElement)
	application.canvasElement = "myCanvas";

if (!application.ui_package)
    application.ui_package = "ui_package";
</xss:code>

<!DOCTYPE html>

<html>

<head>

<title><xss:e value = "application.title"/></title>

<script type="text/javascript" src="../js/jquery-1.4.2.min.js" ></script>
<script type="text/javascript" src="../js/jquery.utils.js"></script>
<script type="text/javascript" src="../js/utils.js"></script>
<script type="text/javascript" src="../js/prototype.js"></script>

<script type="text/javascript" src="../js/ms-ui.js"></script>
<script type="text/javascript" src="../js/ms-streamer.js"></script>
<script type="text/javascript" src="../js/ms-state.js"></script>

<xss:code>
    compiler.inject("render_jscripts");
</xss:code>

<script type="text/javascript">	

var drawingCanvas;		
var g_ui;
var g_elapsed = -1;
var g_delta = 0.0;
var g_canvas;
var g_ui_root;
var application = {};
		
<xss:code>
    compiler.inject("render_initialization");
	compiler.inject("render_resources");
</xss:code>


function start(resolution)  
{  
	function updater()  
	{  
		var now   = new Date().getTime();
        if (g_elapsed < 0)
            g_delta = 0; //first update
        else
		    g_delta  = now - g_elapsed;  
		
        g_elapsed = now; 
              
        <xss:code>
            compiler.inject("render_update");
        </xss:code>

		var context = g_canvas.getContext('2d');
		g_ui.update(g_delta, context);

        window.setTimeout(updater, resolution);  
	}
    
	window.setTimeout(updater, resolution);  
}  

<xss:marker id="variables"/>

<xss:code>
compiler.inject("render_types");
compiler.xss("../common-js/instance.xss", application);
</xss:code>

window.onload = function() 
{
	var Sound = new ms.ui.Sound();
	drawingCanvas = document.getElementById("<xss:e value="application.canvasElement"/>");
    g_canvas = drawingCanvas;
	
	if (drawingCanvas && drawingCanvas.getContext)
	{
		var client =
		{
			width: <xss:e value="application.width"/>,
			height: <xss:e value="application.height"/>,
			canvas: drawingCanvas
		};
            							
		var ui = new ms.ui.Manager(client, streamer);
		
		g_ui = ui;
        g_ui_root = ui.root;
     	ui.load_resources(function()
		{
            <xss:code>
			compiler.inject("render_ui_instances");    
			compiler.inject("render_instances");            
            </xss:code>
			
			document.onkeydown = function(ev)
			{
				ui.keydown(ev.keyCode);                  
			};
			document.onkeyup = function(ev)
			{
				ui.keyup(ev.keyCode);                  
			};
			document.onkeypress = function(ev)
			{
				ui.keypress(ev.keyCode);                  
			};

            if (application.init)
            {
                application.init();
            }
    
            start();
			ui.draw(drawingCanvas.getContext('2d'));
		});
	}
}
</script>

</head>

<body>

	<canvas id="<xss:e value="application.canvasElement"/>" width="<xss:e value="application.width"/>" height="<xss:e value="application.height"/>">

		<p>Your browser doesn't support canvas.</p>

	</canvas>
	
	<audio id="sounds" preload> 
		<xss:marker id="audio_resources"/>	
	Your browser does not support the audio element.
	</audio>
		
	<xss:marker id="html_body"/>

</body>

</html>