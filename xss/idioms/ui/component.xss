<xss:parameter id="cmp"/>
<xss:parameter id="is_class" default_value="false"/>
<xss:parameter id="path"/>

<xss:code>
    string cmp_id = cmp.output_id;
    
    if (path)
        cmp_id = path + "." + cmp_id;
        
    if (is_class)
        cmp_id = "this";
    else if (compiler.application_object(cmp))
    {
        out(marker = "variables", marker_source = "entry") 
        {
            var <xss:e v="cmp.output_id"/>;
        }
    }
    else
    {
        compiler.log("AQUI");
        //this is an instance being compiled inside a class, dont do anything global
        out() 
        {
            var <xss:e v="cmp.output_id"/>;
        }
    }
        
    if (!is_class)
    {
        string parent_id = cmp.parent.output_id;
        if (parent_id == "application")
            parent_id = "g_ui_root";
            
        if (path)
            parent_id = path;   
                
        out()
	    {
		    <xss:e value = "cmp_id"/> = new <xss:e value = "cmp.type.output_id"/>( 
	    }

	    var type = cmp.type;
        if (type.constructor_params)
        {
            for(int i = 0; i < type.constructor_params.size; i++)
		    {				
                var param = type.constructor_params[i];
                string param_value;
                if (param.constant)
                    param_value = param.constant;
                else if (param.property)
                {
                    var prop = cmp.get_property(param.property);					
                    if(prop != null)
                        out() {<xss:e v="prop.render_value()"/>}			
                    else
                        out() {null}	    
                }    
				
                out(dont_break = true) {,}
		    }
        }
		
	    
        out() {<xss:e value = "parent_id"/>.manager, <xss:e value = "parent_id"/>);}
		if(cmp.type.output_id == "ms.ui.Component" || cmp.type.output_id == "ms.ui.ClipArea"){
			out() {<xss:e v="cmp_id"/>.mouse_thru = true;}			
		}
        compiler.xss("../common-js/instance.xss", cmp, path = path, var_value = cmp_id);
    }

    //position the component
    if (cmp.placement)
    {
        if (cmp.placement == "client")
        {
            out() { <xss:e value="cmp_id"/>.client(); }
        }    
        else if (cmp.placement == "center")
        {
            if (cmp.width != null && cmp.height != null)
                out() { <xss:e value="cmp_id"/>.center(<xss:e value="cmp.width"/>, <xss:e value="cmp.height"/>); }
            else
                compiler.error("Cannot position component centered (need [width, height])", component = cmp.id);
        }
        else if (cmp.placement == "bottom")
        {
            if (cmp.height != null)
                out() { <xss:e value="cmp_id"/>.bottom(<xss:e value="cmp.height"/>); }
            else
                compiler.error("Cannot position component bottom (need [height])", component = cmp.id);
        }
        else if (cmp.placement == "top")
        {
            if (cmp.height != null)
                out() { <xss:e value="cmp_id"/>.top(<xss:e value="cmp.height"/>); }
            else
                compiler.error("Cannot position component bottom (need [height])", component = cmp.id);
        }
        else if (cmp.placement == "right")
        {
            if (cmp.width != null)
                out() { <xss:e value="cmp_id"/>.right(<xss:e value="cmp.width"/>); }
            else
                compiler.error("Cannot position component right (need [width])", component = cmp.id);
        }
        else if (cmp.placement == "left")
        {
            if (cmp.height != null)
                out() { <xss:e value="cmp_id"/>.left(<xss:e value="cmp.height"/>); }
            else
                compiler.error("Cannot position component left (need [width])", component = cmp.id);
        }
        //else if (cmp.placement != "")
        //    compiler.error("Invalid placement", placement= cmp.placement);
    }
    else
    {
        if (cmp.x != null && cmp.y != null && cmp.width != null && cmp.height != null)
        {
            out(indent = 0)
            {
                <xss:e value="cmp_id"/>.rect(<xss:e value="cmp.x"/>, <xss:e value="cmp.y"/>, <xss:e value="cmp.width"/>, <xss:e value="cmp.height"/>);
            }
        }
        else if (cmp.x != null && cmp.y != null)
        {
            out(indent = 0)
            {
                <xss:e value="cmp_id"/>.position(<xss:e value="cmp.x"/>, <xss:e value="cmp.y"/>);
            }
        }
        else if (cmp.width != null && cmp.height != null)
        {
            out(indent = 0)
            {
                <xss:e value="cmp_id"/>.size(<xss:e value="cmp.width"/>, <xss:e value="cmp.height"/>);
            }
        }
    }

</xss:code>
