<module id="android">

	<types>
	
		<!-- ENUM declarations -->
		<enum id="EVisibility" output_id="int" default_value="EVisibility.true">
			<property id="true" type="EVisibility" output_id="VISIBLE" output_xml="visible">
				<get text="View.VISIBLE" global="true"/>
			</property>
			
			<property id="false" type="EVisibility" output_id="INVISIBLE" output_xml="invisible">
				<get text="View.INVISIBLE" global="true"/>
			</property>
			
			<property id="gone" type="EVisibility" output_id="GONE" output_xml="gone">
				<get text="View.GONE" global="true"/>
			</property>
		</enum>
		
		<enum id="EGravity" output_id="Gravity" default_value="EGravity.center">
			<property id="top" type="EGravity" output_id="TOP" output_xml="top">
				<get text="Gravity.TOP" global="true"/>
			</property>
			
			<property id="fill" type="EGravity" output_id="FILL" output_xml="fill">
				<get text="Gravity.FILL" global="true"/>
			</property>
			
			<property id="left" type="EGravity" output_id="LEFT" output_xml="left">
				<get text="Gravity.LEFT" global="true"/>
			</property>
			
			<property id="right" type="EGravity" output_id="RIGHT" output_xml="right">
				<get text="Gravity.RIGHT" global="true"/>
			</property>
			
			<property id="bottom" type="EGravity" output_id="BOTTOM" output_xml="bottom">
				<get text="Gravity.BOTTOM" global="true"/>
			</property>
			
			<property id="center" type="EGravity" output_id="CENTER" output_xml="center">
				<get text="Gravity.CENTER" global="true"/>
			</property>
			
			<property id="fill_vertical" type="EGravity" output_id="FILL_VERTICAL" output_xml="fill_vertical">
				<get text="Gravity.FILL_VERTICAL" global="true"/>
			</property>
			
			<property id="clip_vertical" type="EGravity" output_id="CLIP_VERTICAL" output_xml="clip_vertical">
				<get text="Gravity.CLIP_VERTICAL" global="true"/>
			</property>
			
			<property id="center_vertical" type="EGravity" output_id="CENTER_VERTICAL" output_xml="center_vertical">
				<get text="Gravity.CENTER_VERTICAL" global="true"/>
			</property>
			
			<property id="fill_horizontal" type="EGravity" output_id="FILL_HORIZONTAL" output_xml="fill_horizontal">
				<get text="Gravity.FILL_HORIZONTAL" global="true"/>
			</property>
			
			<property id="clip_horizontal" type="EGravity" output_id="CLIP_HORIZONTAL" output_xml="clip_horizontal">
				<get text="Gravity.CLIP_HORIZONTAL" global="true"/>
			</property>
			
			<property id="center_horizontal" type="EGravity" output_id="CENTER_HORIZONTAL" output_xml="center_horizontal">
				<get text="Gravity.CENTER_HORIZONTAL" global="true"/>
			</property>
		</enum>
		
		<enum id="EActionMotionEvent" output_id="int" default_value="-1">
			<property id="up" type="EActionMotionEvent" output_id="ACTION_UP" output_xml="up">
				<get text="MotionEvent.ACTION_UP" global="true"/>
			</property>
			
			<property id="move" type="EActionMotionEvent" output_id="ACTION_MOVE" output_xml="move">
				<get text="MotionEvent.ACTION_MOVE" global="true"/>
			</property>
			
			<property id="down" type="EActionMotionEvent" output_id="ACTION_DOWN" output_xml="down">
				<get text="MotionEvent.ACTION_DOWN" global="true"/>
			</property>
			
			<property id="cancel" type="EActionMotionEvent" output_id="ACTION_CANCEL" output_xml="cancel">
				<get text="MotionEvent.ACTION_CANCEL" global="true"/>
			</property>
			<!-- continue -->
		</enum>
		
		<enum id="EPlacement" output_id="int" default_value="EPlacement.none">
			<property id="none" type="EPlacement" output_id="PL_NONE" output_xml="none">
				<get text="XKPLayout.PL_NONE" global="true"/>
			</property>
			
			<property id="top" type="EPlacement" output_id="PL_TOP" output_xml="top">
				<get text="XKPLayout.PL_TOP" global="true"/>
			</property>
			
			<property id="left" type="EPlacement" output_id="PL_LEFT" output_xml="left">
				<get text="XKPLayout.PL_LEFT" global="true"/>
			</property>
			
			<property id="right" type="EPlacement" output_id="PL_RIGHT" output_xml="right">
				<get text="XKPLayout.PL_RIGHT" global="true"/>
			</property>
			
			<property id="bottom" type="EPlacement" output_id="PL_BOTTOM" output_xml="bottom">
				<get text="XKPLayout.PL_BOTTOM" global="true"/>
			</property>
			
			<property id="client" type="EPlacement" output_id="PL_CLIENT" output_xml="client">
				<get text="XKPLayout.PL_CLIENT" global="true"/>
			</property>
			
			<property id="center" type="EPlacement" output_id="PL_CENTER" output_xml="center">
				<get text="XKPLayout.PL_CENTER" global="true"/>
			</property>
		</enum>

		<!-- EVENT declarations -->
		<class id="IClickListener">
			<array id="imports">
				<object import="android.view.View.OnClickListener"/>
			</array>
			
			<event id="click" output_id="onClick" interface="OnClickListener" def_args="View v" set_handle="setOnClickListener" set_param_hnd="this"/>
		</class>
		
		<class id="IChangeListener">
			<array id="imports">
				<object import="android.widget.CompoundButton"/>
				<object import="android.widget.CompoundButton.OnCheckedChangeListener"/>
			</array>
			
			<event id="change" output_id="onCheckedChanged" interface="OnCheckedChangeListener" def_args="CompoundButton v, Boolean isChecked" set_handle="setOnCheckedChangeListener" set_param_hnd="this"/>
		</class>
		
		<class id="IKeyDownListener">
			<event id="keydown" output_id="onKey" interface="OnKeyListener" def_args="View v, int keyCode, KeyEvent event" set_handle="setOnKeyListener" set_param_hnd="this"/>
		</class>
		
		<class id="IDragListener">
			<event id="drag" output_id="onDrag" interface="OnDragListener" def_args="View v, DragEvent event" set_handle="setOnDragListener" set_param_hnd="this"/>
		</class>
		
		<class id="ITouchListener">
			<array id="imports">
				<object import="android.view.MotionEvent"/>
				<object import="android.view.View.OnTouchListener"/>
			</array>
			
			<event id="touch" output_id="onTouch" interface="OnTouchListener" def_args="View v, MotionEvent ev" set_handle="setOnTouchListener" set_param_hnd="this"/>
		</class>
		
		<!-- CLASS declarations -->
		<class id="IClassImageAdapter">
			<array id="imports">
				<object import="android.view.ViewGroup"/>
				<object import="android.widget.ImageView"/>
				<object import="android.widget.BaseAdapter"/>
				<object import="android.content.Context"/>
			</array>
			
			<array id="classes">
				<object name="ImageAdapter" file_name="ImageAdapter.class.xss"/>
			</array>
			
			<property id="adapter" no_layout="true" type="string" set_handle="setAdapter" set_param_hnd="new ImageAdapter(this)"/>
		</class>
		
		<class id="Math" no_layout="true" static="true">
			<method id="max" type="double"/>
			<method id="abs" type="double"/>
			<method id="atan2" type="double"/>
			
			<property id="PI" output_id="PI" type="double"/>
		</class>
		
		<class id="MotionEvent" no_layout="true">
			<array id="imports">
				<object import="android.view.MotionEvent"/>
			</array>
			
			<method id="getAction" type="EActionMotionEvent"/>
			<method id="getX" type="double"/>
			<method id="getY" type="double"/>
		</class>
		
		<!-- VIEW declarations -->
		<class id="IWidget">
			<property id="x" type="int" output_id="layout_x" ns="xkp" res_type="dimension">
				<get text="getLeft()"/> 
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setLeft({value})" global="true"/>
			</property>
			
			<property id="y" type="int" output_id="layout_y" ns="xkp" res_type="dimension">
				<get text="getTop()"/>
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setTop({value})" global="true"/>
			</property>
			
			<!-- fill_parent == match_parent, wrap_content  -->
			<!-- fill_parent is deprecated after android api 8 -->
			<property id="width" type="int" output_id="layout_width" ns="android" res_type="dimension" default_value="wrap_content">
				<get text="getWidth()"/>
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setWidth({value})" global="true"/>
			</property>
			
			<property id="height" type="int" output_id="layout_height" ns="android" res_type="dimension" default_value="wrap_content">
				<get text="getHeight"/>
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setHeight({value})" global="true"/>
			</property>
			
			<property id="placement" type="EPlacement" ns="xkp">
				<get text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).getPlacement()" global="true"/>
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setPlacement({value})" global="true"/>
			</property>
			
			<property id="autosize_x" type="bool" ns="xkp">
				<get text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).getAutoSizeX()" global="true"/>
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setAutoSizeX({value})" global="true"/>
			</property>
			
			<property id="autosize_y" type="bool" ns="xkp">
				<get text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).getAutoSizeY()" global="true"/>
				<set text="((XKPLayout.LayoutParams) {path}.getLayoutParams()).setAutoSizeY({value})" global="true"/>
			</property>
			
			<property id="visible" type="EVisibility" output_id="visibility" ns="android">
				<get text="getVisibility()"/>
				<set text="setVisibility({value})"/>
			</property>
			
			<property id="enabled" type="bool" ns="android">
				<get text="isEnabled()"/>
				<set text="setEnabled({value})"/>
			</property>
			
			<property id="gravity" type="EGravity" output_id="layout_gravity" ns="android">
				<get text="getGravity()"/>
				<set text="setGravity({value})"/>
			</property>
			
			<!--
			<property id="layout_margin" ns="android" type="int"/>
			<property id="layout_weight" ns="android" type="float"/>
			-->
			
			<import id="ITouchListener"/>
		</class>
		
		<class id="ITextView" super="IWidget">
			<property id="caption" type="string" output_id="text" ns="android" res_type="str_reference">
				<get text="getText()"/>
				<set text="setText({value})"/>
			</property>
			
			<import id="IClickListener"/>
		</class>
		
		<class id="label" super="ITextView" output_id="TextView">
			<array id="imports">
				<object import="android.widget.TextView"/>
			</array>
		</class>
		
		<class id="button" super="ITextView" output_id="Button">
			<array id="imports">
				<object import="android.widget.Button"/>
			</array>
		</class>
		
		<class id="checkbox" super="ITextView" output_id="CheckBox">
			<array id="imports">
				<object import="android.widget.CheckBox"/>
			</array>
			
			<property id="checked" type="bool" ns="android">
				<get text="isChecked()"/>
				<set text="setChecked({value})"/>
			</property>
			
			<import id="IChangeListener"/>
		</class>
		
		<class id="radiobutton" super="ITextView" output_id="RadioButton">
			<array id="imports">
				<object import="android.widget.RadioButton"/>
			</array>
		</class>
		
		<class id="editbox" super="IWidget" output_id="EditText">
			<array id="imports">
				<object import="android.widget.EditText"/>
			</array>
			
			<property id="text" type="string" ns="android" res_type="str_reference">
				<get text="getText().toString()"/>
				<set text="setText({value})"/>
			</property>
		</class>
		
		<class id="listbox" super="IWidget" output_id="ListView">
			<array id="imports">
				<object import="android.widget.ListView"/>
			</array>
		</class>
		
		<class id="img_gallery" super="IWidget" output_id="Gallery">
			<array id="imports">
				<object import="android.widget.Gallery"/>
			</array>
			
			<property id="spacing" type="int" ns="android" res_type="dimension">
				<get text="getGravity()"/>
				<set text="setGravity({value})"/>
			</property>
			
			<property id="images" type="array" no_layout="true" res_type="array_imgs">
				<get text="empty()"/>
				<set text="empty({value})"/>
			</property>
			
			<import id="IClassImageAdapter"/>
		</class>
		
		<class id="holder" super="IWidget" xkpview="true" output_id="XKPLayout">
		</class>
		
		<class id="div" super="holder" xkpview="true" output_id="XKPLayout">
		</class>
		
		<class id="switcher" super="IWidget" xkpview="true" output_id="XKPSwitcher">
			<property id="active" type="string" output_id="current" ns="xkp" res_type="id_reference">
				<get text="getDisplayedChildByName()"/>
				<set text="setDisplayedChildByName({value})"/>
			</property>
			
			<property id="active_index" type="int" output_id="currentIndex" ns="xkp">
				<get text="getDisplayedChild()"/>
				<set text="setDisplayedChild({value})"/>
			</property>
		</class>
		
		<class id="replicator" super="IWidget" xkpview="true" output_id="XKPReplicator">
			<property id="template" type="string" output_id="template" ns="xkp" res_type="id_reference">
				<set text="setTemplateResource({value})"/>
				<get text="getTemplateResource()"/>
			</property>
			
			<property id="items" type="array" output_id="items" ns="xkp">
				<set text="setItems({value})"/>
				<get text="getItems()"/>
			</property>
		</class>
		
		<class id="image" super="IWidget" output_id="ImageView">
			<property id="source" output_id="src" ns="android" type="string" res_type="drawable"/>
		</class>
		
	</types>
	
</module>
