<module id="android">

	<types>
	
		<enum id="EVisibility" output_id="View" output_type="int" default_value="visible">
			<property id="true" type="int" output_id="VISIBLE" output_xml="visible"/>
			<property id="false" type="int" output_id="INVISIBLE" output_xml="invisible"/>
			<property id="gone" type="int" output_id="GONE" output_xml="gone"/>
		</enum>
		
		<enum id="EGravity" output_id="Gravity" output_type="int" default_value="center">
			<property id="top" type="int" output_id="TOP" output_xml="top"/>
			<property id="bottom" type="int" output_id="BOTTOM" output_xml="bottom"/>
			<property id="left" type="int" output_id="LEFT" output_xml="left"/>
			<property id="right" type="int" output_id="RIGHT" output_xml="right"/>
			<property id="center_vertical" type="int" output_id="CENTER_VERTICAL" output_xml="center_vertical"/>
			<property id="fill_vertical" type="int" output_id="FILL_VERTICAL" output_xml="fill_vertical"/>
			<property id="center_horizontal" type="int" output_id="CENTER_HORIZONTAL" output_xml="center_horizontal"/>
			<property id="fill_horizontal" type="int" output_id="FILL_HORIZONTAL" output_xml="fill_horizontal"/>
			<property id="center" type="int" output_id="CENTER" output_xml="center"/>
			<property id="fill" type="int" output_id="FILL" output_xml="fill"/>
			<property id="clip_vertical" type="int" output_id="CLIP_VERTICAL" output_xml="clip_vertical"/>
			<property id="clip_horizontal" type="int" output_id="CLIP_HORIZONTAL" output_xml="clip_horizontal"/>
		</enum>
		
		<enum id="EPlacement" output_id="XKPLayout" output_type="int" default_value="none">
			<property id="none" type="int" output_id="PL_NONE" output_xml="none"/>
			<property id="top" type="int" output_id="PL_TOP" output_xml="top"/>
			<property id="left" type="int" output_id="PL_LEFT" output_xml="left"/>
			<property id="right" type="int" output_id="PL_RIGHT" output_xml="right"/>
			<property id="bottom" type="int" output_id="PL_BOTTOM" output_xml="bottom"/>
			<property id="client" type="int" output_id="PL_CLIENT" output_xml="client"/>
			<property id="center" type="int" output_id="PL_CENTER" output_xml="center"/>
		</enum>

		<class id="IWidget">
			<property id="x" output_id="layout_x" ns="xkp" type="int" res_type="dimension" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setLeft" get_fn="getLeft"/>
			<property id="y" output_id="layout_y" ns="xkp" type="int" res_type="dimension" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setTop" get_fn="getTop"/>
			
			<!-- fill_parent == match_parent and wrap_content  -->
			<!-- fill_parent is deprecated after android api 8 -->
			<property id="width" output_id="layout_width" default_value="wrap_content" ns="android" type="int" res_type="dimension" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setWidth" get_fn="getWidth"/>
			<property id="height" output_id="layout_height" default_value="wrap_content" ns="android" type="int" res_type="dimension" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setHeight" get_fn="getHeight"/>
			
			<property id="placement" ns="xkp" type="EPlacement" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setPlacement" 
				property_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).getPlacement()"/>
			
			<property id="autosize_x" ns="xkp" type="bool" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setAutoSizeX" 
				property_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).getAutoSizeX()"/>
			<property id="autosize_y" ns="xkp" type="bool" 
				property_xss_set="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).setAutoSizeY" 
				property_xss="((XKPLayout.LayoutParams) <xss:e v='path'/>.getLayoutParams()).getAutoSizeY()"/>
			
			<property id="visible" ns="android" type="EVisibility" set_fn="setVisibility" get_fn="getVisibility"/>
			<property id="enabled" ns="android" type="bool" set_fn="setEnabled" get_fn="isEnabled"/>
			
			<!-- top, bottom, left, right, center_vertical, fill_vertical, center_horizontal, fill_horizontal, center, fill, clip_vertical, clip_horizontal-->
			<!--
			<property id="layout_gravity" ns="android" type="enum"/>
			
			<property id="layout_margin" ns="android" type="int"/>
			<property id="layout_weight" ns="android" type="float"/>
			-->
		</class>
		
		<class id="IClickListener">
			<array id="imports">
				<object import="android.view.View.OnClickListener"/>
			</array>
			
			<event id="click" output_id="onClick" interface="OnClickListener" def_args="View v" set_handle="setOnClickListener" set_param_hnd="this"/>
		</class>
		
		<class id="IChangeListener">
			<array id="imports">
				<object import="android.widget.CompoundButton"/>
				<object import="android.widget.CompoundButton.OnCheckedChangeListener"/>
			</array>
			
			<event id="change" output_id="onCheckedChanged" interface="OnCheckedChangeListener" def_args="CompoundButton v, Boolean isChecked" set_handle="setOnCheckedChangeListener" set_param_hnd="this"/>
		</class>
		
		<class id="IKeyDownListener">
			<event id="keydown" output_id="onKey" interface="OnKeyListener" def_args="View v, int keyCode, KeyEvent event" set_handle="setOnKeyListener" set_param_hnd="this"/>
		</class>
		
		<class id="IDragListener">
			<event id="drag" output_id="onDrag" interface="OnDragListener" def_args="View v, DragEvent event" set_handle="setOnDragListener" set_param_hnd="this"/>
		</class>
			
		<class id="ITextView" super="IWidget">
			<property id="caption" output_id="text" ns="android" type="string" res_type="str_reference" set_fn="setText" get_fn="getText"/>
			
			<import id="IClickListener"/>
		</class>
		
		<class id="label" super="ITextView" output_id="TextView">
			<array id="imports">
				<object import="android.widget.TextView"/>
			</array>
		</class>
		
		<class id="button" super="ITextView" output_id="Button">
			<array id="imports">
				<object import="android.widget.Button"/>
			</array>
		</class>
		
		<class id="checkbox" super="ITextView" output_id="CheckBox">
			<array id="imports">
				<object import="android.widget.CheckBox"/>
			</array>
			
			<property id="checked" type="bool" ns="android" set_fn="setChecked" get_fn="isChecked"/>
			
			<import id="IChangeListener"/>
		</class>
		
		<class id="radiobutton" super="ITextView" output_id="RadioButton">
			<array id="imports">
				<object import="android.widget.RadioButton"/>
			</array>
		</class>
		
		<class id="editbox" super="IWidget" output_id="EditText">
			<array id="imports">
				<object import="android.widget.EditText"/>
			</array>
			
			<property id="text" ns="android" type="string" res_type="str_reference" set_fn="setText" get_xss="getText().toString()"/>
		</class>
		
		<class id="listbox" super="IWidget" output_id="ListView">
			<array id="imports">
				<object import="android.widget.ListView"/>
			</array>
		</class>
		
		<class id="img_gallery" super="IWidget" output_id="Gallery">
			<array id="imports">
				<object import="android.widget.Gallery"/>
				<object import="android.widget.ImageView"/>
				
				<object import="android.widget.BaseAdapter"/>
				<object import="android.content.Context"/>
			</array>
			
			<array id="classes">
				<object class_name="ImageAdapter.class.xss"/>
			</array>
			
			<property id="spacing" ns="android" type="int" res_type="dimension" set_fn="setGravity" get_fn="getGravity"/>
			<property id="images" ns="android" type="array" set_fn="fff" get_fn="fff" no_render="true"/>
		</class>
		
		<class id="holder" super="IWidget" xkpview="true" output_id="XKPLayout">
		</class>
		
		<class id="div" super="holder" xkpview="true" output_id="XKPLayout">
		</class>
		
		<class id="switcher" super="IWidget" xkpview="true" output_id="XKPSwitcher">
			<property id="active" output_id="current" ns="xkp" type="string" res_type="id_reference" set_fn="setDisplayedChildByName" get_fn="getDisplayedChildByName"/>
			<property id="active_index" output_id="currentIndex" ns="xkp" type="int" set_fn="setDisplayedChild" get_fn="getDisplayedChild"/>
		</class>
		
		<class id="replicator" super="IWidget" xkpview="true" output_id="XKPReplicator">
			<property id="template" output_id="template" ns="xkp" type="string" res_type="id_reference"/>
			<property id="items" output_id="items" ns="xkp" type="array"/>
		</class>
		
		<class id="image" super="IWidget" output_id="ImageView">
			<property id="source" output_id="src" ns="android" type="string" res_type="drawable"/>
		</class>
		
	</types>
	
</module>
