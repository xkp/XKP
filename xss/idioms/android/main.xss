<xss:code>
	compiler.log("Rendering Android project...");
	
	//ERROR: follow line dispatch assert linker.cpp:1576
	//compiler.log(compiler.output_path());

	var appOptions = compiler.options;
	string appOutputPath = compiler.output_path();
	
	string appName = "DefaultAndroidApplication";
	if(application.name)
		appName = application.name;
	
	int targetAPILevel = 8;
	int minAPILevel = 4;
	if(appOptions.android_api_level)
	{
		int apil = appOptions.android_api_level;
		
		if(apil > minAPILevel && apil < 13)
		{
			targetAPILevel = apil;
			compiler.log("API Level = " + targetAPILevel);
		}
		else
		{
			compiler.error("The number of Android API level version is not correct", android_api_level = apil);
		}
	}
	
	//ERROR: if this array is not initialized then make a console error: "Trying to access null object"
	//array<string> imports;
	
	array<string> imports = [];
	array<string> interfaces = [];
	array<string> events = [];
	array<string> ev_args = [];
	
	for(var inst in android.instances)
	{
		inst.ouput_id = "priv_" + inst.id;
		/*
		//find necessary imports without duplicates
		if(inst.imports && !inst.xkpview)
		{
			//TIPS: live is hard; :)
			//TODO: it's necessary to implement vector, stack, queue and set containers in vm
			for(var i in inst.imports)
			{
				bool found1 = false;
				for(var imp in imports)
				{
					if(imp == i.import)
					{
						found1 = true;
						break;
					}
				}
				
				if(!found1)
					//imports = imports + i.import;
					imports += i.import;
			}
		}
		
		//find necessary events interfaces without duplicates
		for(var e in inst.events)
		{
			if(e.interface && e.implemented)
			{
				bool found2 = false;
				for(var it in interfaces)
				{
					if(it == e.interface)
					{
						found2 = true;
						break;
					}
				}
				
				if(!found2)
				{
					//TIPS: try object type without initialize value but assign new properties
					
					//ERROR: Console error with "Error while compiling xs"
					//object item = object(
					//				interface = e.interface,
					//				event = e.output_id);
					//....and more
					//object item = object(interface = "", event = "");
					//item.interface = e.interface;
					//item.event = e.output_id;
					
					//interfaces += e.interface;
					//events += e.output_id;
					//ev_args += e.args;
				}
			}
		}
		*/
	}
	
	string output_filename;
	output_filename = appName + "/build.bat";
	compiler.xss("build.bat.xss", output_file = output_filename, appName, targetAPILevel, appOutputPath);
	
	output_filename = appName + "/" + "AndroidManifest.xml";
	compiler.xss("AndroidManifest.xml.xss", output_file = output_filename, appName, minAPILevel, targetAPILevel);
	
	output_filename = appName + "/src/com/xkp/android/" + appName + "/Act" + appName + ".java";
	compiler.xss("mainActivity.java.xss", output_file = output_filename, appName, imports, interfaces, events, ev_args);
	
	output_filename = appName + "/src/com/xkp/android/" + appName + "/XKPLayout.java";
	compiler.xss("xkpLayout.java.xss", output_file = output_filename, appName);
	
	output_filename = appName + "/src/com/xkp/android/" + appName + "/XKPReplicator.java";
	compiler.xss("xkpReplicator.java.xss", output_file = output_filename, appName);
	
	output_filename = appName + "/src/com/xkp/android/" + appName + "/XKPSwitcher.java";
	compiler.xss("xkpSwitcher.java.xss", output_file = output_filename, appName);
	
	output_filename = appName + "/res/values/strings.xml";
	compiler.xss("stringValues.xml.xss", output_file = output_filename);
	
	output_filename = appName + "/res/layout/main.xml";
	compiler.xss("mainLayout.xml.xss", output_file = output_filename, appName);
	
	if(appOptions.android_eclipse_project)
	{
		//TODO: copy .project and .classpath files to output_path
		// .project file should be change the third line on the 'name' tag
		//ERROR: some incorrect indent don't facilitate the correct use of .project file
		//       the big problem is with tab characters
	}

</xss:code>
