<xss:parameter id="clazz"/>
<xss:parameter id="renderer"/>
<xss:parameter id="property_renderer" default="property.xss"/>
<xss:parameter id="method_renderer"   default="method.xss"/>
<xss:parameter id="event_renderer"    default="event.xss"/>

<xss:code>
    if (clazz.super)
    {
        out()
        {
            <xss:e v="clazz.output_id"/> = Class.create(<xss:e v="clazz.super.output_id"/>,
        }
    }
    else
    {
        out()
        {
            <xss:e v="clazz.output_id"/> = Class.create(
        }
    }
</xss:code>
{
    initialize: function($super)
    {
        $super();
        
        <xss:code>
        if (renderer)
        {
            compiler.xss(renderer, clazz, is_class = true);
        }
        </xss:code>
    },
    <xss:code>
    for(var prop in clazz.properties)
    {
        if (prop.dont_init)
            continue;
    
        compiler.xss(property_renderer, prop, clazz, is_class = true);
    }    

    for(var mthd in clazz.methods)
    {
        compiler.xss(method_renderer, mthd, clazz, is_class = true);
    }

    //render events as functions
    for(var ev in clazz.events)
    {
        compiler.xss(event_renderer, ev, clazz, is_class = true);
    }
    </xss:code>
});
