<module id="test_idiom">
    <types>
        //testing arrays
        <class id="t_arrays">
            <array id="some_array">
                <object what="something_"/>
                <object what="something"/>
            </array>
			
			<event id="touch" />
        </class>
		
		<class id="t_arrays2">
            <array id="some_array">
                <object what="something3"/>
            </array>
		</class>

		//testing merge array from import and inherit
        <class id="t_arrays1" super="t_arrays">
            <array id="some_array">
                <object what="something2"/>
            </array>
			
			<import id="t_arrays2"/>
        </class>

		<class id="t_arrays3">
			<property id="test_1" type="string"/>
			
			<import id="t_arrays"/>
		</class>
		
		<class id="t_super_merged" super="t_arrays3">

			<array id="some_array">
				<object what="exploit"/>
			</array>

			<property id="test_2" type="string"/>
			
			<import id="t_arrays2"/>
		</class>

        //testing imports
        <class id="t_base_import">
            <property id="title" type="string"/>
            <property id="name" output_id="real_name" type="int" value="20"/>

            <method id="run" type="var" output_id="real_run"/>
            <event id="create" output_id="create" interface="ICreate"/>
        </class>

        <class id="t_mouse_import">
            <event id="click" output_id="onClick" interface="IClick"/>
            <event id="up" output_id="onMouseUp" interface="IMouseUp"/>
            <event id="down" output_id="create"/>
        </class>

        <class id="t_keyb_import">
            <event id="click" output_id="onClick" interface="IKeyClick"/>
            <event id="up" output_id="onMouseUp"/>
            <event id="down" output_id="create"/>
        </class>

        <class id="t_derived_import" super="t_base_import">
            <import id="t_mouse_import"/>
            <import id="t_keyb_import"/>
        </class>
		
		<class id="t_super_derived" super="t_derived_import">
		</class>

        //testing parent and nulls
        <class id="t_xss5">
            <property id="foo" type="string"/>
        </class>

        <class id="t_xss5_1" super="t_xss5">
            <property id="bar" type="string"/>
        </class>

        //testing property set and get
        <class id="t_xss8">
            <property id="foo" type="int"/>

            <property id="bar" type="string">
                <get text="get_bar()"/>
                <set text="set_bar({value})"/>
            </property>

            <property id="complex" type="string">
                <set text="set_complex({path}, {value})" global="true"/>
            </property>

            <property id="some_int" type="int">
                <get text="get_some_int()"/>
                <set text="set_some_int({path}, {value})" global="true"/>
            </property>

            <property id="more_complex" type="int">
                <get text="get_more({path}).complex()" global="true"/>
                <set text="set_more({path}).complex({value})" global="true"/>
            </property>
			
			<import id="t_mouse_import"/>
        </class>

        <class id="t_xss9_1">
            <constructor_params>
                <parameter id="cparam" constant="myManager"/>
                <parameter id="r1" runtime="true"/>
                <parameter id="r2" runtime="true" property="hello"/>
            </constructor_params>
            
            <property id="hello" type="string" value="world"/>
        </class>

        <class id="t_xss9_2">
            
        </class>
        
        //testing global instances
    </types>

    <instance id="i_xss11" output_id="Singleton">
        <property id="foo" type="string">
            <get text="get_foo()"/>
            <set text="Math.sin(PI)" global="true"/>
        </property>
    </instance>
</module>