<module id="box2d" src="box2d.xs">
    <types>
        <class id="physics_world" renderer="body.xss">
			<property id="density" type="float" dont_init="true"/>
			<property id="friction" type="float" dont_init="true"/>
            <property id="restitution" type="float" dont_init="true"/>
            <property id="angular_damping" type="float" dont_init="true"/>
			<property id="linear_damping" type="float" dont_init="true"/>
		</class>

        <class id="body" renderer="body.xss">
            <property id="density"  type="float" dont_init="true"/>
            <property id="friction" type="float" dont_init="true"/>
            <property id="restitution" type="float" dont_init="true"/>
            <property id="angular_damping" type="float" dont_init="true"/>
            <property id="linear_damping" type="float" dont_init="true"/>
            <property id="body_type" type="string" dont_init="true"/>
            <property id="shape" type="string" dont_init="true"/>
            <property id="sensor" type="bool" dont_init="true"/>
            <property id="x" type="float" dont_init="true"/>
            <property id="y" type="float" dont_init="true"/>
            <property id="width" type="float" dont_init="true"/>
            <property id="height" type="float" dont_init="true"/>
            <property id="radius" type="float" dont_init="true"/>
            <property id="rotation" type="float" dont_init="true"/>
        </class>

        <class id="spawner" output_id="ms.arcade.Spawner" renderer="spawner.xss">
            <constructor_params>
                <parameter constant="g_spawner_manager"/>
                <parameter property="x" runtime="true"/>
                <parameter property="y" runtime="true"/>                
                <parameter property="frequency" runtime="true"/>
                <parameter property="velocity" runtime="true"/>
            </constructor_params>

            <property id="x" type="int"/>
            <property id="y" type="int"/>
            <property id="frequency" type="float"/>
            <property id="rotation" type="float">
                <get text="get_rotation()"/>
                <set text="set_rotation({value})"/>
            </property>
            <property id="velocity" type="float"/>
        </class>
		
		<class id="distance_joint" output_id="ms.joint.DistanceJoint">
            <constructor_params>
                <parameter property="body_a"/>
                <parameter property="body_b"/>                               
            </constructor_params>

            <property id="body_a" type="string" use_plain_value="true" dont_init="true"/>
            <property id="body_b" type="string" use_plain_value="true" dont_init="true"/>           
			<property id="damping_ratio" type="float">
				<get text="joint.GetDampingRatio()"/>
                <set text="joint.SetDampingRatio({value})"/>
            </property>
			<property id="length" type="int">
				<get text="joint.GetLength()"/>
                <set text="joint.SetLength({value})"/>
            </property>
			<property id="frequency" type="float">
				<get text="joint.GetFrequency()"/>
                <set text="joint.SetFrequency({value})"/>
            </property>
        </class>		
		
		<class id="revolute_joint" output_id="ms.joint.RevoluteJoint">
            <constructor_params>
                <parameter property="body_a"/>
                <parameter property="body_b"/>                                          
            </constructor_params>

            <property id="body_a" type="string" use_plain_value="true" dont_init="true"/>
            <property id="body_b" type="string" use_plain_value="true" dont_init="true"/>          
			<property id="enable_limit" type="string" use_plain_value="true">
				<get text="joint.IsLimitEnabled()"/>
                <set text="joint.EnableLimit({value})"/>
            </property>
			<property id="enable_motor" type="string" use_plain_value="true">
				<get text="joint.IsMotorEnabled()"/>
                <set text="joint.EnableMotor({value})"/>
            </property>
			<property id="lower_angle" type="float">
				<get text="get_lower_angle()"/>
                <set text="set_lower_angle({value})"/>
            </property>
			<property id="upper_angle" type="float">
				<get text="get_upper_angle()"/>
                <set text="set_upper_angle({value})"/>
            </property>
			<property id="joint_angle" type="float">
				<get text="get_joint_angle()"/>
                <set text="set_joint_angle({value})"/>
            </property>
			<property id="motor_speed" type="float">
				<get text="joint.GetMotorSpeed()"/>
                <set text="joint.SetMotorSpeed({value})"/>
            </property>
			<property id="max_motor_torque" type="float">
				<get text="joint.GetMotorTorque()"/>
                <set text="joint.SetMaxMotorTorque({value})"/>
            </property>
        </class>
		
		<class id="prismatic_joint" output_id="ms.joint.PrismaticJoint">
            <constructor_params>
                <parameter property="body_a"/>
                <parameter property="body_b"/>                           
                <parameter property="axis"/>                
            </constructor_params>

            <property id="body_a" type="string" use_plain_value="true" dont_init="true"/>
            <property id="body_b" type="string" use_plain_value="true" dont_init="true"/>                      
            <property id="axis" type="string" use_plain_value="true" dont_init="true"/>
			<property id="enable_limit" type="string" use_plain_value="true">
				<get text="joint.IsLimitEnabled()"/>
                <set text="joint.EnableLimit({value})"/>
            </property>
			<property id="enable_motor" type="string" use_plain_value="true">
				<get text="joint.IsMotorEnabled()"/>
                <set text="joint.EnableMotor({value})"/>
            </property>
			<property id="motor_speed" type="float">
				<get text="joint.GetMotorSpeed()"/>
                <set text="joint.SetMotorSpeed({value})"/>
            </property>
			<property id="max_motor_force" type="float">
				<get text="joint.GetMotorForce()"/>
                <set text="joint.SetMaxMotorForce({value})"/>
            </property>
			<property id="lower_translation" type="float">
				<get text="joint.GetLowerLimit()"/>
                <set text="set_lower_limit({value})"/>
            </property>
			<property id="upper_translation" type="float">
				<get text="joint.GetUpperLimit()"/>
                <set text="set_upper_limit({value})"/>
            </property>			
        </class>
		
		<class id="pulley_joint" output_id="ms.joint.PulleyJoint">
            <constructor_params>
                <parameter property="body_a"/>
                <parameter property="body_b"/>
				<parameter property="ground_a"/>                
                <parameter property="ground_b"/>  
				<parameter property="ratio"/> 
            </constructor_params>

            <property id="body_a" type="string" use_plain_value="true" dont_init="true"/>
            <property id="body_b" type="string" use_plain_value="true" dont_init="true"/>
			<property id="ground_a" type="string" use_plain_value="true" dont_init="true"/>
            <property id="ground_b" type="string" use_plain_value="true" dont_init="true"/>	
            <property id="ratio" type="float" dont_init="true"/>	
        </class>	
		
		<class id="weld_joint" output_id="ms.joint.WeldJoint">
            <constructor_params>
                <parameter property="body_a"/>
                <parameter property="body_b"/>                                              
            </constructor_params>

            <property id="body_a" type="string" use_plain_value="true" dont_init="true"/>
            <property id="body_b" type="string" use_plain_value="true" dont_init="true"/>		
        </class>
		
        <class id="physics" super="body" renderer="body.xss"/>
    </types>
</module>