
<xss:parameter id="it"/>
<xss:parameter id="extra"/>

<xss:code>
    string jquery_creator = it.jquery;
    if (!jquery_creator)
        jquery_creator = it.type.id;
    
    out()
    {
        <xss:e value="it.output_id"/>.<xss:e value="jquery_creator"/>(<xss:open_brace/>
    }
    
	//render properties
	for(var prop in it.properties)
	{
		if(prop.render_as != "script")
			continue;
		
		out()
        {
            <xss:e v="prop.id"/>: <xss:e v="prop.render_value()"/>,
        }
	}
    
    if (extra)
    {
        for(var e in extra)
        {
		    out()
            {
                <xss:e v="e.id"/>: <xss:e v="e.value"/>,
            }
        }
    }

	for(var ev in it.events)
	{
        if (ev.render_as != "script")
            continue;
            
	    var	impls = ev.impls;
        string evargs = "event, ui";
        if (ev.output_args)
            evargs = ev.output_args;
            
        compiler.log("ARGSL " + evargs);
            
	    out(indent = 0)
	    {
		    <xss:e value="ev.output_id"/>: function(<xss:e v="evargs"/>) <xss:open_brace/> 
	    }

	    for(var evimpl in impls)
	    {
			evimpl.use_this_id(true);
		    out() { <xss:e>evimpl.render()</xss:e> }
	    }

	    out(indent = 0)
	    {
		    <xss:close_brace/>,
	    }
	}
</xss:code>});
