<module id="jquery" src="classes.xs">

	<types>
		<!-- enums -->
		<enum id="EChecked" output_id="string" default="EChecked.false">
			<property id="true" type="EChecked" output_id="checked"/>
			<property id="false" type="EChecked" output_id=""/>
		</enum>
		
		<enum id="EVisibility" output_id="string" default="EVisibility.true">
			<property id="true" type="string" output_id="visible"/>
			<property id="false" type="string" output_id="hidden"/>
		</enum>
		
		<enum id="EPlacement" output_id="var" type="string" default="EPlacement.none">
			<property id="none" type="string">
				<get text="none" type="string"/>
			</property>
			<property id="top" type="string"/>
			<property id="left" type="string"/>
			<property id="right" type="string"/>
			<property id="bottom" type="string"/>
			<property id="client" type="string">
				<get text='"client"' type="string" global="true"/>
			</property>
			<property id="center" type="string"/>
		</enum>
		
		<enum id="EBorderStyle" output_id="var" default="EBorderStyle.none">
			<property id="none" type="string"/>
			<property id="hidden" type="string"/>
			<property id="dotted" type="string"/>
			<property id="dashed" type="string"/>
			<property id="solid" type="string"/>
			<property id="double" type="string"/>
			<property id="groove" type="string"/>
			<property id="ridge" type="string"/>
			<property id="inset" type="string"/>
			<property id="outset" type="string"/>
		</enum>

		<!-- interfaces -->
		<class id="IComponent">
            <property id="x" type="int" output_id="left" render_type="script">
                <get text="position().left"/>
                <set text="css( { left:{value} } )"/>
            </property>
			
            <property id="y" type="int" output_id="top" render_type="script">
                <get text="position().top"/>
                <set text="css( { top:{value} } )"/>
            </property>
			
            <property id="width" type="int" render_type="script">
                <get text="width()"/>
                <set text="width({value})"/>
            </property>
			
            <property id="height" type="int" render_type="script">
                <get text="height()"/>
                <set text="height({value})"/>
            </property>
			
            <property id="min_width" type="int" render_type="script">
                <get text='css("min-width")'/>
                <set text='css("min-width", {value})'/>
            </property>
			
            <property id="max_width" type="int" render_type="script">
                <get text='css("max-width")'/>
                <set text='css("max-width", {value})'/>
            </property>
			
            <property id="min_height" type="int" render_type="script">
                <get text='css("min-height")'/>
                <set text='css("min-height", {value})'/>
            </property>
			
            <property id="max_height" type="int" render_type="script">
                <get text='css("max-height")'/>
                <set text='css("max-height", {value})'/>
            </property>
			<!--
            <property id="margin" type="int" output_id="margin-top" render_type="script">
                <get text="?()"/>
                <set text="?({value})"/>
            </property>
			
            <property id="margin_top" type="int" output_id="margin-top" render_type="script">
                <get text="?()"/>
                <set text="?({value})"/>
            </property>
			
            <property id="margin_right" type="int" output_id="margin-top" render_type="script">
                <get text="?()"/>
                <set text="?({value})"/>
            </property>
			
            <property id="margin_bottom" type="int" output_id="margin-top" render_type="script">
                <get text="?()"/>
                <set text="?({value})"/>
            </property>
			
            <property id="margin_left" type="int" output_id="margin-top" render_type="script">
                <get text="?()"/>
                <set text="?({value})"/>
            </property>
			
			<property id="padding" type="int" ns="android" res_type="dimension">
				<set text="setPadding({value}, {value}, {value}, {value})"/>
			</property>
			
			<property id="paddingLeft" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>
			
			<property id="paddingTop" type="int" ns="android">
				<get text="getPaddingTop()"/>
				<set text="setPadding(getPaddingLeft(), {value}, getPaddingRight(), getPaddingBottom())"/>
			</property>
			
			<property id="paddingRight" type="int" ns="android">
				<get text="getPaddingRight()"/>
				<set text="setPadding(getPaddingLeft(), getPaddingTop(), {value}, getPaddingBottom())"/>
			</property>
			
			<property id="paddingBottom" type="int" ns="android">
				<get text="getPaddingBottom()"/>
				<set text="setPadding(getPaddingLeft(), getPaddingTop(), getPaddingRight(), {value})"/>
			</property>
			...//border-top-width
			<property id="border-top-width" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>

			<property id="border-width" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>
			...//border-width
			<property id="border-top-color" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>

			<property id="border-color" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>
			...//border-top-color
			<property id="border-top-color" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>

			<property id="border-color" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>
			...//border-top-style
			<property id="border-top-style" type="EBorderStyle" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>

			<property id="border-style" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>

			<property id="background-color" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>
			
			<property id="background-image" type="int" ns="android">
				<get text="getPaddingLeft()"/>
				<set text="setPadding({value}, getPaddingTop(), getPaddingRight(), getPaddingBottom())"/>
			</property>
			-->
			
			<property id="placement" type="EPlacement" render_type="script">
				<get text='attr("placement")'/>
				<set text='attr("placement", {value})'/>
			</property>
			
			<property id="autosize_x" type="bool" render_type="script">
				<get text='attr("autosize_x")'/>
				<set text='attr("autosize_x", {value})'/>
			</property>
			
			<property id="autosize_y" type="bool" render_type="script">
				<get text='attr("autosize_y")'/>
				<set text='attr("autosize_y", {value})'/>
			</property>
			
			<property id="enabled" type="bool" render_type="script">
				<get text='attr("disabled")'/>
				<set text='attr("disabled", {value})'/>
			</property>
			
			<property id="visible" type="EVisibility" render_type="script">
				<get text='css("visibility")'/>
				<set text='css("visibility", {value})'/>
			</property>
			
			<property id="opacity" type="float" render_type="script">
				<get text='+{path}.css("opacity")' global="true"/>
				<set text='css( { opacity: {value} } )'/>
			</property>

            <property id="background" type="string" render_type="script">
                <get text='css("background-color")'/>
                <set text='css("background-color", {value})'/>
            </property>
        </class>
		
		<!-- components -->
		<class id="div" super="IComponent" output_id="div">
        </class>
		
		<class id="scroller" super="IComponent" output_id="div">
			<array id="attributes">
				<object name="style" value="overflow:auto"/>
			</array>
		</class>
		
        <class id="label" super="IComponent" output_id="div">
            <property id="caption" type="string" render_type="body_outtag">
                <get text="text()"/>
                <set text="text({value})"/>
            </property>
			
			<method id="empty" />
        </class>
		
        <class id="button" super="IComponent" output_id="input" jq_classname="button">
			<array id="attributes">
				<object name="type" value="button"/>
				<object name="name" value="{id}" expr="true"/>
			</array>
			
            <property id="caption" type="string" output_id="value" render_type="body_intag">
                <get text='attr("value")'/>
                <set text='attr("value", {value})'/>
            </property>
        </class>
		
		<class id="editbox" super="IComponent" output_id="input">
			<array id="attributes">
				<object name="type" value="text"/>
				<object name="name" value="{id}" expr="true"/>
			</array>
			
            <property id="text" type="string" output_id="value" render_type="body_intag">
                <get text='attr("value")'/>
                <set text='attr("value", {value})'/>
            </property>
			
            <property id="hint" type="string" output_id="title" render_type="body_intag">
                <get text='attr("title")'/>
                <set text='attr("title", {value})'/>
            </property>
		</class>
		
		<class id="radiobutton" super="IComponent" output_id="input" jq_classname="button" renderer="input_radio.body.xss">
			<array id="attributes">
				<object name="type" value="radio"/>
				<object name="name" value="{parent.id}" expr="true"/>
			</array>
			
            <property id="caption" type="string" render_type="body_outtag">
                <get text='util_labelPropText({path})' global="true"/>
                <set text='util_labelPropText({path}, {value})' global="true"/>
            </property>
			
            <property id="checked" type="bool" render_type="body_intag">
                <get text='attr("checked")'/>
                <set text='attr("checked", {value})'/>
            </property>
		</class>
		
		<class id="radiogroup" super="IComponent" output_id="div" jq_classname="buttonset">
		</class>
		
		<!-- td: unificate radio with checkbox in only one xss file -->
		<!-- <class id="checkbox" super="IComponent" output_id="input" jq_classname="button" renderer="input_checkbox.body.xss"> -->
		<class id="checkbox" super="IComponent" output_id="input" renderer="input_checkbox.body.xss">
			<array id="attributes">
				<object name="type" value="checkbox"/>
				<object name="name" value="{id}" expr="true"/>
				<object name="value" value=""/>
			</array>
			
			<!-- TODO: override this properties by anyone -->
            <property id="x" type="int" output_id="left" render_type="script" override="true">
                <get text="position().left"/>
                <set text="util_checkboxPropLeft({path}, {value})" global="true"/>
            </property>
			
            <property id="y" type="int" output_id="top" render_type="script" override="true">
                <get text="position().top"/>
                <set text="util_checkboxPropTop({path}, {value})" global="true"/>
            </property>
			
			<!--
            <property id="width" type="int" render_type="script" override="true">
                <get text="width()"/>
                <set text="width({value})"/>
            </property>
			
            <property id="height" type="int" render_type="script" override="true">
                <get text="height()"/>
                <set text="height({value})"/>
            </property>
			-->
            <property id="caption" type="string" render_type="body_outtag">
                <get text="util_labelPropText({path})" global="true"/>
                <set text="util_labelPropText({path}, {value})" global="true"/>
            </property>
			
            <property id="checked" type="bool" render_type="body_intag">
                <get text='attr("checked")'/>
                <set text='attr("checked", {value})'/>
            </property>
		</class>
		
		<class id="img" super="IComponent" output_id="input">
			<array id="attributes">
				<object name="type" value="image"/>
				<object name="name" value="{id}" expr="true"/>
			</array>
			
			<property id="src" type="string" render_type="body_intag">
                <get text='attr("src")'/>
                <set text='attr("src", {value})'/>
			</property>
		</class>
		
		<class id="tabcontrol" super="IComponent" output_id="div" jq_classname="tabs" renderer="div_tabcontrol.body.xss">
			<property id="tabs" type="array" no_script="true"/>
			
			<method id="add_tab" output_id="add"/>
		</class>
	</types>
	
</module>
