<xss:code>
	if(cmp.properties)
	{
		for(var p in cmp.properties)
		{
			string prop_type = p.type;

			if(p.set || p.get)
			{
				string set_prop_name = p.name + "_set(" + prop_type + " value)";
				string get_prop_name = p.name + "_get(void)";

				string var_name = "_" + p.name;
				string var_decl = prop_type + " " + var_name;
				priv_vars += var_decl;

				// generate method for set value to property
				out(indent = 0)
				{
					void <xss:e value="main_class"/>::<xss:e value="set_prop_name"/>
					<xss:open_brace/>
				}
				if(p.set)
				{
					out(indent = 1)
					{
						<xss:e value="p.set.generate()"/>
					}
				}
				else
				{
					out(indent = 1)
					{
						<xss:e value="var_name"/> = value;
					}
				}
				out(indent = 0)
				{
					<xss:close_brace/>
					<xss:return/>
				}

				// generate method for get value of property
				out(indent = 0)
				{
					<xss:e value="prop_type"/> <xss:e value="main_class"/>::<xss:e value="get_prop_name"/>
					<xss:open_brace/>
				}
				if(p.get)
				{
					out(indent = 1)
					{
						<xss:e value="p.get.generate()"/>
					}
				}
				else
				{
					out(indent = 1)
					{
						return <xss:e value="var_name"/>;
					}
				}
				out(indent = 0)
				{
					<xss:close_brace/>
					<xss:return/>
				}

				set_prop_name = "void " + set_prop_name;
				get_prop_name = prop_type + " " + get_prop_name;

				// push methods of properties in array for include in class declaration
				methods += set_prop_name;
				methods += get_prop_name;
			}
			else
			if(!p.get_fn && !p.set_fn && !p.get_xss && !p.set_xss)
			{
				// add a data member variable with a property name
				// how to know is property is added on xs code or it is defined in classes section?
				if(prop_type == "")
					prop_type = "QVariant";
				
				priv_vars += prop_type + " " + p.name;
			}
		}
	} // if(cmp.properties)

	if(cmp.events)
	{
		for(var e in cmp.events)
		{
			if(!e.implemented)
				continue;

			string evt_name = "on_" + cmp.id + "_" + e.qt_name + "()";

			out(indent = 0)
			{
				void <xss:e value="main_class"/>::<xss:e value="evt_name"/>
				<xss:open_brace/>
			}

			for(var impl in e.impls)
			{
				out(indent = 1)
				{
					<xss:e value="impl.generate()"/>
				}
			}

			out(indent = 0)
			{
				<xss:close_brace/>
				<xss:return/>
			}

			evt_name = "void " + evt_name;

			// push event in array for include in class declaration
			methods += evt_name;
		}
	} // if(cmp.events)

	if(cmp.methods)
	{
		for(var m in cmp.methods)
		{
			if(m.is_native)
				continue;
		
			string mthd_name;
			string mthd_type;

			// why i get an empty value when method don't return nothing, 
			// and i not get a null pointer 
			if(m.type != "")
				mthd_type = m.type;
			else
				mthd_type = "void";

			mthd_name = m.name + "(" + m.args.generate() + ")";

			// in the generate method, all reference/calls to cmp are with 
			// 'ui->objectName' schema, think that!
			out(indent = 0)
			{
				<xss:e value="mthd_type"/> <xss:e value="main_class"/>::<xss:e value="mthd_name"/>
				<xss:open_brace/>
					<xss:e value="m.code.generate()"/>
				<xss:close_brace/>
				<xss:return/>
			}

			mthd_name = mthd_type + " " + mthd_name;

			// push method in array for include in class declaration
			methods += mthd_name;
		}
	} // if(cmp.methods)
</xss:code>
