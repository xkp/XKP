<xss:parameter id="obj"/>
<xss:code>

out(marker = "threejs_variables", marker_source = "entry") {var <xss:e v="obj.id"/>;}
out(){
<xss:e v = "obj.id"/> = new <xss:e v="obj.type.output_id"/>(<xss:open_brace/>
}

var type = obj.type;
var params = type.constructor_params;

if (params)
{
    int i = 0;
    for(var p in params)
    {			
			if (p.property)
			{					
				if(obj.get_property(p.property) != null)
				{
				var prop = obj.get_property(p.property);
				if(prop.value != null){
					if(i > 0) out() {,}					
					if(prop.output_id == "src") 
						out(){map:new THREE.Texture(streamer.get_resource('<xss:e v="obj.src"/>').data),}
					else					
						out() {<xss:e v="prop.output_id"/>:<xss:e v="prop.value()"/>}
					i++;
				}
				}
			}			        
    }
}

out(){
	<xss:close_brace/>);
	}
	
if(obj.parent.class_name == "composite_material")
	out(){
	<xss:e v = "obj.parent.id"/>.push(<xss:e v = "obj.id"/>);
	}

</xss:code>
