<module id="webgl" src="module.xs">
	<dependency href="../js/resig.js"/>	  
    <dependency href="../js/event.js"/>
    
    <dependency href="../js/keys.js"/>
	<dependency href="../js/colors.js"/>
    <dependency href="../js/three/Three.js"/>
    <dependency href="../js/three/Stats.js"/>
    <dependency href="../js/three/RequestAnimationFrame.js"/>
	<dependency href="../js/three/Utils.js"/>
	<dependency href="../js/three/Detector.js"/>
	<types>
	
		<class id="vector3d">		
            <property id="x" type="float" use_plain_value="true"/>
			<property id="y" type="float" use_plain_value="true"/>
			<property id="z" type="float" use_plain_value="true"/>		
		</class>

		<class id="rotation_class">		
            <property id="x" type="float" use_plain_value="true">	
				<get text="get_rotation_x({path})" global = "true"/>
				<set text="set_rotation_x({path}, {value})" global = "true"/>
            </property>
			<property id="y" type="float" use_plain_value="true">	
				<get text="get_rotation_y({path})" global = "true"/>
				<set text="set_rotation_y({path}, {value})" global = "true"/>
            </property>
			<property id="z" type="float" use_plain_value="true">	
				<get text="get_rotation_z({path})" global = "true"/>
				<set text="set_rotation_z({path}, {value})" global = "true"/>
            </property>		
		</class>		

		<class id="sound_3d" renderer="sound_renderer.xss"/>	
		
		<class id="material" hasimagedata="true">
			<constructor_params>
				<parameter id="color" property="color" runtime="true"/> 
				<parameter id="wireframe" property="wireframe" runtime="true"/>
				<parameter id="wireframe_linewidth" property="wireframe_linewidth" runtime="true"/>
				<parameter id="src" property="src" runtime="true"/>	
				<parameter id="texture_object" property="texture_object" runtime="true"/>
				<parameter id="shading" property="shading" runtime="true"/>
				<parameter id="vertex_colors" property="vertex_colors" runtime="true"/>
				<parameter id="env_map" property="env_map" runtime="true"/>
				<parameter id="combine" property="combine" runtime="true"/>
				<parameter id="reflectivity" property="reflectivity" runtime="true"/>
				<parameter id="shininess" property="shininess" runtime="true"/>
				<parameter id="specular" property="specular" runtime="true"/>
				<parameter id="transparent" property="transparent" runtime="true"/>
				<parameter id="refraction_ratio" property="refraction_ratio" runtime="true"/>
				<parameter id="ambient" property="ambient" runtime="true"/>
				<parameter id="blending" property="blending" runtime="true"/>
			</constructor_params>
			<property id="color" type="string" use_plain_value="true" dont_init="true"/> 			
			<property id="wireframe" type="string" dont_init="true"/>
			<property id="wireframe_linewidth" type="string" output_id="wireframeLinewidth" dont_init="true"/>
			<property id="alpha" type="float">
				<set text="set_material_alpha({path}, {value})" global = "true"/>
            </property>
			<property id="src" type="string" dont_init="true"/>				
			<property id="texture_object" type="string" dont_init="true"/>	
			<property id="shading" type="string" dont_init="true"/>
			<property id="vertex_colors" type="string" output_id="vertexColors" dont_init="true"/>
			<property id="env_map" type="string" output_id="envMap" dont_init="true"/>
			<property id="combine" type="string" dont_init="true"/>
			<property id="reflectivity" type="string" dont_init="true"/>
			<property id="shininess" type="string" dont_init="true"/>
			<property id="specular" type="string" dont_init="true"/>
			<property id="transparent" type="string" dont_init="true"/>	
			<property id="refraction_ratio" type="float" output_id="refractionRatio" dont_init="true"/>
			<property id="ambient" type="string" dont_init="true"/>
			<property id="blending" type="string" dont_init="true"/>
			<property id="imagedata" type="string" use_plain_value="true">
				<get text="get_image_data({path})" global = "true"/>
                <set text="put_image({path}, {value})" global = "true"/>
            </property>			
		</class>
		
		<class id="composite_material" output_id="Array"/>
		
		<class id="basic_material" super="material" output_id="THREE.MeshBasicMaterial" renderer="param_in_obj.xss"/>
				
		<class id="lambert_material" super="material" output_id="THREE.MeshLambertMaterial" renderer="param_in_obj.xss"/>
			
		<class id="phong_material" super="material" output_id="THREE.MeshPhongMaterial" renderer="param_in_obj.xss"/>
			
		<class id="normal_material" super="material" output_id="THREE.MeshNormalMaterial" renderer="param_in_obj.xss"/>
		
		<class id="depth_material" super="material" output_id="THREE.MeshDepthMaterial" renderer="param_in_obj.xss"/>
				
		<class id="object3d" hasimagedata="true">			
            <property id="color" type="string" use_plain_value="true">
				<set text="materials[0].color.setHex({value})"/>
            </property>
			<property id="texture" type="string">				
				<set text="materials[0].map = THREE.ImageUtils.loadTexture(scene.streamer.get_resource({value}).asset)"/>
            </property>		
			<property id="material" type="string" use_plain_value="true" dont_init="true">
				<set text="materials[0] = {value}"/>
            </property>
			<property id="alpha" type="float" use_plain_value="true">	
				<get text="get_object_alpha({path})" global = "true"/>
				<set text="set_object_alpha({path}, {value})" global = "true"/>
            </property>
			<property id="overdraw" type="string"/>
			<property id="double_sided" type="string" output_id="doubleSided"/>							
			<property id="position" type="vector3d"/>
			<property id="rotation" type="rotation_class"/>
			<property id="scale" type="vector3d"/>
			<property id="imagedata" type="string" use_plain_value="true">
				<get text="get_image_data({path})" global = "true"/>
                <set text="put_image({path}, {value})" global = "true"/>
            </property>
		</class>
	
		<class id="transform" output_id="THREE.Object3D" heritable="true">
			<property id="texture" type="string" use_plain_value="true">
				<set text="set_webgl_transform_image({path}, {value})" global = "true"/>
            </property>
			<property id="material" type="string" use_plain_value="true">
				<set text="set_transform_material({path}, {value})" global = "true"/>
            </property>
			<property id="position" type="vector3d"/>
			<property id="rotation" type="rotation_class"/>
			<property id="scale" type="vector3d"/>
		</class>
				
		<class id="light"> 					
			<property id="color" type="string" dont_init="true" use_plain_value="true"/>			
			<property id="position" type="vector3d"/>
			<property id="rotation" type="rotation_class"/>
			<property id="scale" type="vector3d"/>
		</class>
		
		<class id="ambient_light" super="light" output_id="THREE.AmbientLight" renderer="light_renderer.xss">
			<constructor_params>
				<parameter id="color" property="color" runtime="true" use_plain_value="true"/>					 				
			</constructor_params>
		</class>
		
		<class id="directional_light" super="light" output_id="THREE.DirectionalLight" renderer="light_renderer.xss">
			<constructor_params>
				<parameter id="color" property="color" runtime="true" use_plain_value="true"/>
				<parameter id="intensity" property="intensity" runtime="true"/>
				<parameter id="distance" property="distance" runtime="true"/>
				<parameter id="cast_shadow" property="cast_shadow" runtime="true"/>  				
			</constructor_params>			
			<property id="intensity" type="string" dont_init="true"/>
			<property id="distance" type="string" dont_init="true"/>
			<property id="cast_shadow" output_id="castShadow" type="string" dont_init="true"/>
		</class>
	
		<class id="point_light" super="light" output_id="THREE.PointLight" renderer="light_renderer.xss">
			<constructor_params>
				<parameter id="color" property="color" runtime="true" use_plain_value="true"/>
				<parameter id="intensity" property="intensity" runtime="true"/>
				<parameter id="distance" property="distance" runtime="true"/>           		
			</constructor_params>				
			<property id="intensity" type="string" dont_init="true"/>
			<property id="distance" type="string" dont_init="true"/>
		</class>
	
		<class id="camera" output_id="THREE.Camera" renderer="camera_renderer.xss">
			<constructor_params>				
				<parameter property="fov" runtime="true"/>
				<parameter property="aspect" runtime="true"/>
				<parameter property="near" runtime="true"/>
				<parameter property="far" runtime="true"/>     
				<parameter property="target" runtime="true"/>  			
			</constructor_params>				
			<property id="fov" type="string" dont_init="true"/>
			<property id="aspect" type="string" dont_init="true"/>
			<property id="near" type="string" dont_init="true"/>
			<property id="far" type="string" dont_init="true"/>
			<property id="target" type="string" dont_init="true"/>	
			<property id="position" type="vector3d"/>
			<property id="rotation" type="rotation_class"/>
			<property id="scale" type="vector3d"/>
		</class>
	
		<class id="quake_camera" output_id="THREE.QuakeCamera" renderer="camera_renderer.xss">
			<constructor_params> 				
				<parameter property="fov" runtime="true"/>
				<parameter property="aspect" runtime="true"/>
				<parameter property="near" runtime="true"/>
				<parameter property="far" runtime="true"/>     
				<parameter property="target" runtime="true"/> 
				<parameter property="speed" runtime="true"/>
				<parameter property="look_speed" runtime="true"/>
				<parameter property="no_fly" runtime="true"/>
				<parameter property="vertical" runtime="true"/>
				<parameter property="auto_forward" runtime="true"/>			
			</constructor_params>				
			<property id="fov" type="string" dont_init="true"/>
			<property id="aspect" type="string" dont_init="true"/>
			<property id="near" type="string" dont_init="true"/>
			<property id="far" type="string" dont_init="true"/>
			<property id="target" type="string" dont_init="true"/>
			<property id="speed" output_id="movementSpeed" type="string" dont_init="true"/> 
			<property id="look_speed" output_id="lookSpeed" type="string" dont_init="true"/>
			<property id="no_fly" output_id="noFly" type="string" dont_init="true"/>
			<property id="vertical" output_id="lookVertical" type="string" dont_init="true"/>
			<property id="auto_forward" output_id="autoForward" type="string" dont_init="true"/>
			<property id="position" type="vector3d"/>
			<property id="rotation" type="rotation_class"/>
			<property id="scale" type="vector3d"/>
		</class>
	
		<class id="plane" super="object3d" output_id="THREE.Plane" renderer="object3d_renderer.xss" heritable="true">
			<constructor_params>
				<parameter id="width" property="width" runtime="true"/>
				<parameter id="height" property="height" runtime="true"/>
				<parameter id="x_segments" property="x_segments" runtime="true" default_value="1"/>
				<parameter id="y_segments" property="y_segments" runtime="true" default_value="1"/>
			</constructor_params>
			<property id="width" type="string" dont_init="true"/>
			<property id="height" type="string" dont_init="true"/>
			<property id="x_segments" output_id="segmentsWidth" type="string" dont_init="true"/>
			<property id="y_segments" output_id="segmentsHeight" type="string" dont_init="true"/>
		</class>
	
		<class id="cube" super="object3d" output_id="THREE.Cube" renderer="object3d_renderer.xss" heritable="true">
			<constructor_params>
				<parameter id="width" property="width" runtime="true"/>
				<parameter id="height" property="height" runtime="true"/>
				<parameter id="depth" property="depth" runtime="true"/>      
				<parameter id="x_segments" property="x_segments" runtime="true"/>
				<parameter id="y_segments" property="y_segments" runtime="true"/>
				<parameter id="z_segments" property="z_segments" runtime="true"/>
				<parameter id="material_array" property="material_array" runtime="true" use_plain_value="true"/>	
				<parameter id="flipped" property="flipped" runtime="true"/>
				<parameter id="sides" property="sides" runtime="true"/>				
			</constructor_params>
			<property id="width" type="string" dont_init="true"/> 
			<property id="height" type="string" dont_init="true"/>
			<property id="depth" type="string" dont_init="true"/>
			<property id="material_array" type="string" dont_init="true" use_plain_value="true"/>
			<property id="x_segments" output_id="segmentsWidth" type="string" dont_init="true"/>
			<property id="y_segments" output_id="segmentsHeight" type="string" dont_init="true"/>
			<property id="z_segments" output_id="segmentsDepth" type="string" dont_init="true"/>				
			<property id="flipped" type="string" dont_init="true"/>
			<property id="sides" type="string" dont_init="true"/>
		</class>
	
		<class id="cylinder" super="object3d" output_id="THREE.Cylinder" renderer="object3d_renderer.xss" heritable="true">
			<constructor_params>
				<parameter id="segments" property="segments" runtime="true"/>
				<parameter id="top_radius" property="top_radius" runtime="true"/>
				<parameter id="bottom_radius" property="bottom_radius" runtime="true"/>      
				<parameter id="height" property="height" runtime="true"/>
				<parameter id="topoffset" property="topoffset" runtime="true"/>
				<parameter id="bottomoffset" property="bottomoffset" runtime="true"/>			
			</constructor_params>	
			<property id="segments" type="string" dont_init="true"/> 
			<property id="top_radius" type="string" dont_init="true"/>
			<property id="bottom_radius" type="string" dont_init="true"/>
			<property id="height" type="string" dont_init="true"/>
			<property id="topoffset" type="string" dont_init="true"/>
			<property id="bottomoffset" type="string" dont_init="true"/>			
		</class>
	
		<class id="sphere" super="object3d" output_id="THREE.Sphere" renderer="object3d_renderer.xss" heritable="true">
			<constructor_params>
				<parameter id="radius" property="radius" runtime="true"/>
				<parameter id="x_segments" property="x_segments" runtime="true"/>
				<parameter id="y_segments" property="y_segments" runtime="true"/>			
			</constructor_params>
			<property id="radius" type="string" dont_init="true"/>
			<property id="x_segments" output_id="segmentsWidth" type="string" dont_init="true"/>
			<property id="y_segments" output_id="segmentsHeight" type="string" dont_init="true"/>
		</class>
	
		<class id="icosahedron" super="object3d" output_id="THREE.Icosahedron" renderer="object3d_renderer.xss" heritable="true">
			<constructor_params>
				<parameter id="subdivisions" property="subdivisions" runtime="true"/>			
			</constructor_params>
			<property id="subdivisions" type="string" dont_init="true"/>
		</class>
			
		<class id="texture_cube" renderer="envmap_renderer.xss">
			<constructor_params>
				<parameter property="posx"/>
				<parameter property="negx"/>
				<parameter property="posy"/>
				<parameter property="negy"/>
				<parameter property="posz"/>
				<parameter property="negz"/>
				<parameter property="mapping"/>
			</constructor_params>
			<property id="posx" type="string" dont_init="true"/>
			<property id="negx" type="string" dont_init="true"/>
			<property id="posy" type="string" dont_init="true"/>
			<property id="negy" type="string" dont_init="true"/>
			<property id="posz" type="string" dont_init="true"/>
			<property id="negz" type="string" dont_init="true"/>
			<property id="mapping" type="string" use_plain_value="true" dont_init="true"/>
		</class>
		
		<class id="panorama_cube" renderer="envmap_renderer.xss">
			<constructor_params>
				<parameter property="size"/>
				<parameter property="texture_cube"/>				
			</constructor_params>
			<property id="size" type="int" dont_init="true"/>
			<property id="texture_cube" type="string" dont_init="true"/>			
		</class>
	
		<class id="model" dont_render="true" renderer="model_renderer.xss">
			<property id="position" type="vector3d"/>
			<property id="rotation" type="rotation_class"/>
			<property id="scale" type="vector3d"/>
		</class>		
	</types>
	
</module>
