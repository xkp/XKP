<xss:parameter id="obj"/>
<xss:code>

if(obj.parent.class_name == "composite_material"){
	out(){
	<xss:e v = "obj.parent.id"/>.push(new <xss:e v="obj.type.output_id"/>(<xss:open_brace/>
	}
}else{
	out(){
	var <xss:e v = "obj.id"/> = new <xss:e v="obj.type.output_id"/>(<xss:open_brace/>
	}
}

var params = obj.type.constructor_params;
if (params)
{
    int i = 0;
    for(var p in params)
    {			
			if (p.property)
			{					
				if(obj.get_property(p.property) != null)
				{
				var prop = obj.get_property(p.property);
				if(prop.value != null){
					if(i > 0) out() {,}					
					if(prop.output_id == "texture_src") 
						out(){map:THREE.ImageUtils.loadTexture(g_streamer.get_resource('<xss:e v="obj.texture_src"/>').asset),}
					else
						out() {<xss:e v="prop.output_id"/>:<xss:e v="prop.value"/>}
					i++;
				}
				}
			}			        
    }
}

if(obj.parent.class_name == "composite_material"){
	out(){
	<xss:close_brace/>));
	}
}else{
	out(){
	<xss:close_brace/>);
	}
}

</xss:code>
