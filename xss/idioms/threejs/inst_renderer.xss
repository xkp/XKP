<xss:parameter id="i"/>

<xss:code>		
        if (i.idiom)
        {
            if (i.idiom.id == "sequence")
                return;
        }		
		if(i.renderer)
			compiler.xss(i.renderer, i);
		else
		{
			var type = i.type;
			array param_values = [];
			if (type.constructor_params)
			{
				for(var param in type.constructor_params)
				{			                
					if (param.property)
					{
						var prop = i.get_property(param.property);
						var tmp = object();
						tmp.id = prop.id;
						if(prop.value != null)
						{									
							if(prop.use_plain_value)
								tmp.value = prop.value;
							else
								tmp.value = prop.render_value();						
						}
						else
						{
							tmp.value = null;
						}
						param_values += tmp;
					}   			                
				}
			}
			out(marker = "threejs_variables", marker_source = "entry") {var <xss:e v="i.id"/>;}
			out()
			{
			<xss:e v="i.id"/> = 
			<xss:e v="compiler.instantiate(i.type, runtime_args = param_values)"/> ;
			}
		}
		if(i.class_name == "transform"){
			out(){<xss:e v="i.id"/>.events = new ms.event.EventHolder();}
		}
		if(i.parent.class_name == "transform"){			
				out(){				
				<xss:e v="i.parent.id"/>.addChild(<xss:e v="i.id"/>);
				scene.addObject(<xss:e v="i.parent.id"/>);
				}
			}				
</xss:code>
