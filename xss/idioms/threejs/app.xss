<!DOCTYPE html>

<html>

<head>

<title><xss:e value = "application.title"/></title>
<style type="text/css">
	body{
	 <xss:marker id="css_style"/>
	}
</style>
</head>

<body>
<script type="text/javascript" src="../js/three/Detector.js"></script>
<script type="text/javascript" src="../js/three/Three.js"></script>
<script type="text/javascript" src="../js/three/Stats.js"></script>
<script type="text/javascript" src="../js/three/RequestAnimationFrame.js"></script>
<script type="text/javascript" src="../js/jquery-1.4.2.min.js" ></script>
<script type="text/javascript" src="../js/jquery.utils.js"></script>
<script type="text/javascript" src="../js/utils.js"></script>
<script type="text/javascript" src="../js/prototype.js"></script>
<script type="text/javascript" src="../js/ms-ui.js"></script>
<script type="text/javascript" src="../js/ms-streamer.js"></script>
<script type="text/javascript" src="../js/ms-state.js"></script>

<xss:marker id="html_body"/>

<xss:code>
if(application.background)
	out(marker = "css_style"){
	background:<xss:e value = "application.background"/>;
	}
out(){
<script type="text/javascript">		
}

if(application.renderer=="webgl")
	out(){
	if ( ! Detector.webgl ) Detector.addGetWebGLMessage();
	var renderer = new THREE.WebGLRenderer( { antialias: true } );
	}
if(application.renderer=="canvas")
	out(){
	var renderer = new THREE.CanvasRenderer();	
	}
</xss:code>

var SCREEN_WIDTH = window.innerWidth;
var SCREEN_HEIGHT = window.innerHeight;
var g_elapsed = -1;
var g_delta = 0.0;			
<xss:marker id="variables"/>

var threejs_models = 
        [
            <xss:marker id="model_src"/>
        ];

var application = {};

<xss:code>
    compiler.inject("render_initialization");	
</xss:code>

soundRenderer = new THREE.SoundRenderer();		
document.body.appendChild( soundRenderer.domElement );
renderer.setSize( window.innerWidth, window.innerHeight );

function render() {
renderer.clear();

var now   = new Date().getTime();
if (g_elapsed < 0)
    g_delta = 0; //first update
else
g_delta  = now - g_elapsed;  
g_elapsed = now; 

<xss:code>
	compiler.inject("render_update");
</xss:code>

<xss:marker id="render_function"/>
		
renderer.render( scene, camera );
soundRenderer.render( scene, camera );
}

<xss:code>
	compiler.inject("render_types");
	compiler.inject("render_instances");	
	compiler.xss("../common-js/instance.xss", application, event_renderer = "../threejs/event.xss");
</xss:code>

if (application.init)
{
	application.init();
}

document.body.appendChild( renderer.domElement );
animate();

function animate() {
	requestAnimationFrame( animate );
	render();
}

function get_model(model_id)
{
		for(var i = 0; i < this.threejs_models.length; i++)
		{
			var model = this.threejs_models[i];
			if (model.id == model_id)
				return model.src;
		}
		return null;
}

</script>

</body>

</html>