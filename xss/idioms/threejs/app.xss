<!DOCTYPE html>

<html>

<head>

<title><xss:e value = "application.title"/></title>
<style type="text/css">
	body{
	 <xss:marker id="css_style"/>
	}
</style>
</head>

<body>
<script type="text/javascript" src="../js/three/Detector.js"></script>
<script type="text/javascript" src="../js/three/Three.js"></script>
<script type="text/javascript" src="../js/three/Stats.js"></script>
<script type="text/javascript" src="../js/three/RequestAnimationFrame.js"></script>
<script type="text/javascript" src="../js/three/Utils.js"></script>
<script type="text/javascript" src="../js/jquery-1.4.2.min.js" ></script>
<script type="text/javascript" src="../js/jquery.utils.js"></script>
<script type="text/javascript" src="../js/utils.js"></script>
<script type="text/javascript" src="../js/prototype.js"></script>
<script type="text/javascript" src="../js/ms-ui.js"></script>
<script type="text/javascript" src="../js/ms-streamer.js"></script>
<script type="text/javascript" src="../js/ms-state.js"></script>
<script type="text/javascript" src="../js/ms-event.js"></script>
<script type="text/javascript" src="../js/keys.js"></script>
<script type="text/javascript" src="../js/colors.js"></script>

<xss:code>

if(!application.width) 
	application.width = "window.innerWidth";
if(!application.height) 
	application.height = "window.innerHeight";
	
if(application.background)
	out(marker = "css_style"){
	background:<xss:e value = "application.background"/>;
	}
out(){
<script type="text/javascript">		
}

if(application.renderer=="webgl")
	out(){
	if ( ! Detector.webgl ) Detector.addGetWebGLMessage();
	var renderer = new THREE.WebGLRenderer( { antialias: false } );
	}
if(application.renderer=="canvas")
	out(){
	var renderer = new THREE.CanvasRenderer();	
	}
</xss:code>

var ui;
var active_camera;
var g_elapsed = -1;
var g_delta = 0.0;	
var drawingCanvas = renderer.domElement;
var app_width = <xss:e value="application.width"/>;
var app_height = <xss:e value="application.height"/>;
<xss:marker id="variables"/>

var application = {};
application.events = new ms.event.EventHolder();

<xss:code>
    compiler.inject("render_initialization");
</xss:code>
// --------RESOURCES---------
<xss:code>
    compiler.inject("render_resources");	
</xss:code>
// --------RESOURCES---------

soundRenderer = new THREE.SoundRenderer();		
document.body.appendChild( soundRenderer.domElement );
renderer.setSize( app_width, app_height );

function render() {

var now   = new Date().getTime();
if (g_elapsed < 0)
    g_delta = 0; //first update
else
g_delta  = now - g_elapsed;  
g_elapsed = now; 

<xss:code>
	compiler.inject("render_update");
</xss:code>

application.events.dispatch("animate", []);	
<xss:marker id="render_function"/>	
application.events.dispatch("switch_cameras", []);

}

<xss:code>
	compiler.inject("render_types");
	compiler.inject("render_instances");	
	compiler.xss("../common-js/instance.xss", application);
</xss:code>

if(ui)
{
	ui.load_resources(function(){		
		<xss:code>		
			compiler.inject("render_ui_instances");			
		</xss:code>		
		g_ui.fill_background = false;
	});
}

var event_manager = new ms.event.ThreeEventManager();

document.onmousemove = function(ev)
{
	event_manager.mousemove(ev.clientX, ev.clientY);                  
};
document.onmousedown = function(ev)
{
	event_manager.mousedown(ev.clientX, ev.clientY);                  
};
document.onmouseup = function(ev)
{
	event_manager.mouseup(ev.clientX, ev.clientY);		
};
document.onkeydown = function(ev)
{
	event_manager.keydown(ev.keyCode);                  
};
document.onkeyup = function(ev)
{
	event_manager.keyup(ev.keyCode);                  
};
document.onkeypress = function(ev)
{
	event_manager.keypress(ev.keyCode);                  
};

if (application.init)
{
	application.init();
}
	
document.body.appendChild( renderer.domElement );
animate();

function animate() {
	if(ui)
		drawingCanvas.getContext('2d').clearRect(0,0,<xss:e value="application.width"/>,<xss:e value="application.height"/>);
	requestAnimationFrame( animate );
	render();
	if(ui)
		ui.draw(drawingCanvas.getContext('2d'));
}

</script>

</body>

</html>